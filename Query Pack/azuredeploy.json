{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "defaultValue": "365DaysofKQL",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/querypacks",
            "apiVersion": "2019-09-01-preview",
            "name": "[parameters('resourceName')]",
            "tags": {},
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/00b110b9-acc6-47b7-8997-ec64d93ea003')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize RDP activity",
                "description": "Creates a list of computers that your users have connected to via RDP and the total count of distinct computers each user has connected to\n",
                "body": "//Creates a list of computers that your users have connected to via RDP and the total count of distinct computers each user has connected to\r\nSecurityEvent\r\n| where TimeGenerated > ago(7d)\r\n| where EventID == \"4624\"\r\n| where LogonType == 10\r\n//Extend new column that drops Account to lower case so users are correctly summarized, i.e User123 and user123 are combined\r\n| extend AccountName=tolower(Account)\r\n| summarize\r\n    ['Count of Computers']=dcount(Computer),\r\n    ['List of Computers']=make_set(Computer)\r\n    by AccountName\r\n| sort by ['Count of Computers'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/01297aa5-d58c-4e3d-ab04-d3132178b2ad')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize RDP clients",
                "description": "Visualize the different RDP clients, such as rMemoteNG or RoyalTS being used in your environment",
                "body": "//Microsoft Sentinel query\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n//Exclude Defender for Identity which uses RDP traffic to map your network\r\n| where InitiatingProcessFileName != \"Microsoft.Tri.Sensor.exe\"\r\n| summarize ['RDP Client Count']=count()by InitiatingProcessFileName\r\n| where isnotempty(InitiatingProcessFileName)\r\n| sort by ['RDP Client Count'] desc\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/03204de0-33dd-4980-82b1-2f93374231e1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find users who downloaded malware",
                "description": "When Office 365 detects malware in OneDrive or SharePoint find any users that downloaded the same file",
                "body": "//When Office 365 detects malware in OneDrive or SharePoint find any users that downloaded the same file\r\nlet malware=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(1d)\r\n    | where Operation == \"FileMalwareDetected\"\r\n    | distinct OfficeObjectId;\r\nOfficeActivity\r\n| where TimeGenerated > ago (1d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where OfficeObjectId in (malware)\r\n| summarize ['Users who Downloaded']=make_set(UserId) by ['File Name']=OfficeObjectId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/043e1b25-2cbc-447c-8cb2-a3c8b64ab2b5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find new alert types",
                "description": "List any new alert types found by the Defender product suite in the last week compared to the previous year",
                "body": "//List any new alert types found by the Defender product suite in the last week compared to the previous year\r\n//First find all the existing alerts from the last year excluding the last week\r\nlet existingalerts=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago(365d) and TimeGenerated < ago(7d)\r\n    // Exclude alerts from Sentinel itself\r\n    | where ProviderName != \"ASI Scheduled Alerts\"\r\n    | distinct AlertName;\r\n//Find new alerts triggered in the last week\r\nSecurityAlert\r\n| where TimeGenerated > ago(7d)\r\n// Exclude alerts from Sentinel itself\r\n| where ProviderName != \"ASI Scheduled Alerts\"\r\n| where AlertName !in (existingalerts)\r\n| distinct AlertName, ProviderName, ProductName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/06a098bd-ba14-4deb-91a0-408df65857c1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find users who received or read malicious email",
                "description": "When a malicious email is received, list all the users who received it and all the users who read it",
                "body": "//When a malicious email is received, list all the users who received it and all the users who read it\r\n//First find all the users who received the email\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n//Add in your malicious subject or malicious sender address\r\n| where Subject == \"Malicious Subject Name\" or SenderFromAddress == \"malicioususer@domain.com\"\r\n| project RecipientEmailAddress, Subject, InternetMessageId, SenderFromAddress\r\n//Combine that data with the OfficeActivity table which tracks whether an email was accessed\r\n| join kind=inner (\r\n    OfficeActivity\r\n    | where Operation == \"MailItemsAccessed\"\r\n    | mv-expand todynamic(Folders)\r\n    | extend FolderItems = Folders.FolderItems\r\n    | mv-expand FolderItems\r\n    | extend InternetMessageId = tostring(FolderItems.InternetMessageId)\r\n    | project UserId, InternetMessageId\r\n    )\r\n    on InternetMessageId\r\n//Create summary of data listing the count and all the users who received the email vs the list and count of those that read it\r\n| summarize\r\n    ['Receipient Count']=dcount(RecipientEmailAddress),\r\n    ['Users Who Received Email']=make_set(RecipientEmailAddress),\r\n    ['Reader Count']=dcount(UserId),\r\n    ['Users Who Read Email']=make_set(UserId)\r\n    by SenderFromAddress, Subject, InternetMessageId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0993b0be-9d31-449f-ad76-4907f8f9aac4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect user made owner of multiple Teams",
                "description": "Detect when a user is made an owner on multiple Teams in a short time frame.",
                "body": "//Detect when a user is made an owner on multiple Teams in a short time frame.\r\n//Define a time period to check and the threshold of how many Teams to alert on.\r\n//This example would find users added as an owner to 3 or more Teams within 30 minutes.\r\nlet timeframe=30m;\r\nlet threshold=3;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation == \"MemberRoleChanged\"\r\n| mv-expand Members\r\n| extend RoleAdded = tostring(Members.Role)\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where RoleAdded == 2\r\n| project TimeGenerated, RoleAdded, UserAdded, TeamName\r\n| summarize\r\n    ['Number of Teams Made Owner']=dcount(TeamName), ['Team Names']=make_set(TeamName) by UserAdded, bin(TimeGenerated, timeframe)\r\n| where ['Number of Teams Made Owner'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0b5bad24-7883-4247-81fa-af22b5cc8723')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect first time Teamviewer usage",
                "description": "//Detects Teamviewer being used for the first time on a device",
                "body": "//Detects Teamviewer being used for the first time on a device\r\n//Build a list of known devices using Teamviewer over the last 60 days\r\nlet knowndevices=\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(60d) and TimeGenerated < ago(1d)\r\n| project DeviceName, InitiatingProcessFileName, ActionType, LocalIPType, RemoteIPType\r\n| where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| distinct DeviceName;\r\n//Find new devices in the last day not in the known list\r\n    DeviceNetworkEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n    | where ActionType == \"ConnectionSuccess\"\r\n    | where LocalIPType == \"Private\"\r\n    | where RemoteIPType == \"Public\"\r\n    | where DeviceName !in (knowndevices)\r\n    | distinct DeviceName\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0e7d46fa-2024-4e24-a048-3f20ea7cb318')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find recipients of potential phishing email",
                "description": "When a user reports an email as potential phishing find all other users who received that email",
                "body": "//When a user reports an email as potential phishing find all other users who received that email\nSecurityAlert\n| where TimeGenerated > ago(1dd)\n| where ProviderName == \"OATP\"\n| where AlertName has \"Email reported by user as malware or phish\"\n| mv-expand todynamic(Entities)\n| project Entities\n| extend SenderMailFromAddress = tostring(Entities.P1Sender)\n| extend Subject = tostring(Entities.Subject)\n| where isnotempty(SenderMailFromAddress) and isnotempty(Subject)\n| distinct SenderMailFromAddress, Subject\n| join kind=inner(\n    EmailEvents\n    | where TimeGenerated > ago(timerange)\n    | project RecipientEmailAddress, SenderMailFromAddress, Subject\n    )\n    on SenderMailFromAddress, Subject\n| summarize Recipients=make_set(RecipientEmailAddress) by Subject, SenderMailFromAddress\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/11713f1c-e4bc-42fd-bc86-1f941ce56162')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find most phished users",
                "description": "Find the most phished users from the last 365 days",
                "body": "//Find the most phished users from the last 365 days\nSecurityAlert\n| where TimeGenerated > ago (365d)\n| where ProviderName == \"OATP\"\n| where AlertName in (\"Email messages containing malicious URL removed after delivery\", \"Email messages containing phish URLs removed after delivery\")\n| mv-expand todynamic(Entities)\n| project Entities\n| extend User = tostring(Entities.MailboxPrimaryAddress)\n| where isnotempty(User)\n| summarize ['Count of Phishing Attempts']=count()by User\n| order by ['Count of Phishing Attempts']\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12302c0d-74ae-4ce7-a8ae-29317d897de5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Visualize users created, disabled and deleted",
                "description": "Visualize Active Directory accounts created, disabled and deleted per day",
                "body": "//Visualize Active Directory accounts created, disabled and deleted per day over the timerange\nSecurityEvent\n| where TimeGenerated > ago(30d)\n| where AccountType == \"User\"\n| project TimeGenerated, Account, EventID, TargetAccount\n| where EventID in (\"4720\", \"4725\", \"4726\")\n| where TargetAccount !endswith \"$\"\n| summarize\n    ['Accounts Created']=countif(EventID == \"4720\"),\n    ['Accounts Deleted']=countif(EventID == \"4726\"),\n    ['Accounts Disabled']=countif(EventID == \"4725\")\n    by startofday(TimeGenerated)\n| render columnchart\n    with (\n    kind=unstacked,\n    xtitle=\"Day\",\n    ytitle=\"Count\",\n    title=\"Active Directory User Accounts Created, Disabled and Deleted per day\")\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12d6f18d-d887-4f4b-b0cf-e92746e0c9e1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize legacy auth allowed vs blocked",
                "description": "Visualize distinct users allowed to connect via legacy auth vs blocked by conditional access",
                "body": "//Visualize distinct users allowed to connect via legacy auth vs blocked by conditional access\r\nSigninLogs\r\n| where TimeGenerated > ago(180d)\r\n| where ResultType in (\"0\", \"53003\")\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize\r\n    ['Legacy Auth Users Allowed']=dcountif(UserPrincipalName, ResultType == 0),\r\n    ['Legacy Auth Users Blocked']=dcountif(UserPrincipalName, ResultType == 53003)\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Legacy auth distinct users allowed vs blocked by Conditional Access\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12f8ac75-d8f3-4edf-949f-75b4e8855ad6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize post delivery email events",
                "description": "Visualize any post delivery actions such as email being quarantined or deleted by admins",
                "body": "//Visualize any post delivery actions such as email being quarantined or deleted by admins\r\nEmailPostDeliveryEvents\r\n| where TimeGenerated > ago (90d)\r\n| where Action !in (\"None\", \"Unknown\")\r\n| make-series Count=count() on TimeGenerated from ago(45d) to now() step 1d by Action\r\n| render timechart with (title=\"Email post delivery actions over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/14012dd2-b43f-4eea-8585-e325bba6f2ea')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect file downloads from guests recently added to Teams",
                "description": "Detects guests who begin to download files immediately after being added to a Team.",
                "body": "// Finds guest accounts who were added to a Team and then downloaded documents straight away. \r\n// Startime = Amount of time to look back on, i.e last 7 days.\r\n// Timeframe = looks for downloads for this period after being added to the Team, i.e 2 hours after being added.\r\nlet starttime = 7d;\r\nlet timeframe = 2h;\r\nlet operations = dynamic([\"FileSyncDownloadedFull\", \"FileDownloaded\"]);\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| project TimeAdded=TimeGenerated, UserId=tolower(UserAdded)\r\n| join kind=inner\r\n    (\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(starttime)\r\n    | where Operation in (['operations'])\r\n    )\r\n    on UserId\r\n| project DownloadTime=TimeGenerated, TimeAdded, FileName=SourceFileName, UserId\r\n| where (DownloadTime - TimeAdded) between (0min .. timeframe)\r\n//Optionally summarize the data into the activity by each guest\r\n| summarize\r\n    ['Count of Files Downloaded']=count(),\r\n    ['List of Files Downloaded']=make_set(FileName)\r\n    by UserId\r\n| sort by ['Count of Files Downloaded'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1592d1af-a66f-4035-973c-794c6f2284e9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect PIM activation outside of working hours",
                "description": "Detect Azure AD PIM activiations outside of working hours",
                "body": "//Detect Azure AD PIM activiations outside of working hours\r\nlet timerange=30d;\r\nAuditLogs\r\n// extend LocalTime to your time zone\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where LocalTime > ago(timerange)\r\n// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\r\n| where hourofday(LocalTime) !between (6 .. 18)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| project LocalTime, User, ['Azure AD Role Name'], ['Activation Reason']=ResultReason",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/17ec48d7-9c19-46d2-b23b-7dd323e526da')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when emails are read by admin staff",
                "description": "Finds users who hold either Global Admin or Exchange admin privilege using the IdentityInfo table and then finds any events where those admins read the email of other users. This could be expected or a sign of insider threat activity.",
                "body": "//Detects users with global or exchange administrator roles who have accessed email items from mailboxes other than their own\r\nlet timeframe=30d;\r\nlet adminusers=\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where AssignedRoles has_any (\"Exchange Administrator\", \"Global Administrator\")\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| project UserId=AccountUPN;\r\nOfficeActivity\r\n| where TimeGenerated > ago(timeframe)\r\n| where OfficeWorkload == \"Exchange\"\r\n| where Operation == \"MailItemsAccessed\"\r\n| where UserId in (adminusers)\r\n| where UserId != MailboxOwnerUPN\r\n| project AccessTime=TimeGenerated, UserId, MailboxOwnerUPN, Folders\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1801cd36-63a8-4980-bda6-cd6809a9e5d7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find latest logon to device after Defender for Endpoint alert triggered",
                "description": "When a Defender for Endpoint alert is triggered, search for the most recent interactive logon to the device prior to the alert. Also returns if that user is a local admin on the device.",
                "body": "//When a Defender for Endpoint alert is triggered, search for the most recent interactive logon to the device prior to the alert.\r\n//Also returns if that user is a local admin on the device.\r\nlet timeframe = 48h;\r\nSecurityAlert\r\n| where TimeGenerated > ago(timeframe)\r\n| where ProviderName == \"MDATP\"\r\n| project AlertTime=TimeGenerated, DeviceName=CompromisedEntity, AlertName\r\n| join kind=inner (\r\n    DeviceLogonEvents\r\n    | project\r\n        TimeGenerated,\r\n        LogonType,\r\n        ActionType,\r\n        InitiatingProcessCommandLine,\r\n        IsLocalAdmin,\r\n        AccountName,\r\n        DeviceName\r\n    | where LogonType in (\"Interactive\", \"RemoteInteractive\")\r\n    | where ActionType == \"LogonSuccess\"\r\n    | where InitiatingProcessCommandLine == \"lsass.exe\"\r\n    )\r\n    on DeviceName\r\n| where (AlertTime - TimeGenerated) between (0min .. timeframe)\r\n| summarize arg_max(TimeGenerated, *) by DeviceName\r\n| project\r\n    LogonTime=TimeGenerated,\r\n    AlertTime,\r\n    AlertName,\r\n    DeviceName,\r\n    AccountName,\r\n    IsLocalAdmin",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1a56acd7-ad8a-46e7-b429-77172e4b8edf')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA coverage by application",
                "description": "Calculate the percentage of signins to each of your Azure AD applications that used MFA",
                "body": "//Calculate the percentage of signins to each of your Azure AD applications that used MFA\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| summarize\r\n    ['Total Signin Count']=count(),\r\n    ['Total MFA Count']=countif(AuthenticationRequirement == \"multiFactorAuthentication\"),\r\n    ['Total non MFA Count']=countif(AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by AppDisplayName\r\n| project\r\n    AppDisplayName,\r\n    ['Total Signin Count'],\r\n    ['Total MFA Count'],\r\n    ['Total non MFA Count'],\r\n    MFAPercentage=(todouble(['Total MFA Count']) * 100 / todouble(['Total Signin Count']))\r\n| sort by ['Total Signin Count'] desc, MFAPercentage asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1dbcdc81-da2f-4fe8-8db9-714a6916962b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect successful MFA method from new location",
                "description": "Detect when a user successfully completes MFA with a new MFA method (i.e push, text message) and a new location compared to the last 180 days",
                "body": "let mfahistory = materialize  (\n    SigninLogs\n    | where TimeGenerated > ago (180d) and TimeGenerated < ago(1d)\n    | where ResultType == 0\n    | where AuthenticationRequirement == \"multiFactorAuthentication\"\n    | extend AuthMethod = tostring(MfaDetail.authMethod)\n    | where isnotempty(AuthMethod)\n    | distinct UserPrincipalName, AuthMethod, Location);\nmfahistory\n| join kind=rightanti  (\n    SigninLogs\n    | where TimeGenerated > ago (1d)\n    | where ResultType == 0\n    | where AuthenticationRequirement == \"multiFactorAuthentication\"\n    | extend AuthMethod = tostring(MfaDetail.authMethod)\n    | where isnotempty(AuthMethod)\n    | project\n        TimeGenerated,\n        UserPrincipalName,\n        AuthMethod,\n        AppDisplayName,\n        Location,\n        IPAddress)\n    on UserPrincipalName, Location",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1f3b3eea-df13-4965-a707-0066f006ccc6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find your users signing into other tenants as guests",
                "description": "Find sign ins where your users signed into other Azure AD tenants as outbound guests",
                "body": "//Find sign ins where your users signed into other Azure AD tenants as outbound guests\r\nSigninLogs\r\n| where AADTenantId == HomeTenantId\r\n| where ResourceTenantId != AADTenantId\r\n| where UserType == \"Guest\"\r\n| project\r\n    TimeGenerated,\r\n    AppDisplayName,\r\n    UserPrincipalName,\r\n    ResultType,\r\n    Location,\r\n    IPAddress,\r\n    ['Guest Tenant Id']=ResourceTenantId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/221e6065-9287-4bdc-9d89-61b1be59c5ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find and parse URL events",
                "description": "Use the inbuilt KQL parse_url function to return the various components of a URL\n",
                "body": "//Use the inbuilt KQL parse_url function to return the various components of a URL\r\nDeviceEvents\r\n| where ActionType == \"BrowserLaunchedToOpenUrl\"\r\n| extend Url = parse_url(RemoteUrl)\r\n| extend Hostname = tostring(Url.Host)\r\n| extend Fragment = tostring(Url.Fragment)\r\n| extend Password = tostring(Url.Password)\r\n| extend Path = tostring(Url.Path)\r\n| extend Port = tostring(Url.Port)\r\n| extend Query = tostring(Url.Query)\r\n| extend Schema = tostring(Url.Scheme)\r\n| extend Username = tostring(Url.Username)\r\n| where isnotempty(Hostname)\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    RemoteUrl,\r\n    Schema,\r\n    Port,\r\n    Hostname,\r\n    Path,\r\n    Query,\r\n    Username,\r\n    Password,\r\n    Fragment",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/23dda63a-c6ca-4791-a4af-86dc74ebad37')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize conditional access failures",
                "description": "Create a summary showing which of your Azure AD conditional access policies are preventing the most signins and for what reasons",
                "body": "//Create a summary showing which of your Azure AD conditional access policies are preventing the most signins and for what reasons\r\nSigninLogs\r\n| where TimeGenerated > ago (7d)\r\n| project TimeGenerated, ConditionalAccessPolicies, ResultType, ResultDescription\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend ['Conditional Access Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult == \"failure\"\r\n| summarize ['Count of Failures']=count()by ['Conditional Access Policy Name'], ResultType, ResultDescription\r\n| sort by ['Count of Failures'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/240d8628-daa0-4a8a-9aef-6c5d3eaf6ad6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize conditional access outcomes",
                "description": "Create a pivot table showing all conditional access policy outcomes over the last 30 days",
                "body": "//Create a pivot table showing all conditional access policy outcomes over the last 30 days\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| extend CA = parse_json(ConditionalAccessPolicies)\r\n| mv-expand bagexpansion=array CA\r\n| evaluate bag_unpack(CA)\r\n| extend\r\n    ['CA Outcome']=tostring(column_ifexists('result', \"\")),\r\n    ['CA Policy Name'] = column_ifexists('displayName', \"\")\r\n| evaluate pivot(['CA Outcome'], count(), ['CA Policy Name'])",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/25170b50-6468-44b9-9bb4-0060845fdd4b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Heartbeat - Find computers that haven't sent a heartbeat in 30 days",
                "description": "Finds computers that haven't sent a heartbeat in the last 30 days",
                "body": "Heartbeat\r\n| where TimeGenerated > ago(365d)\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| project\r\n    Computer,\r\n    ['Last Heartbeat']=TimeGenerated,\r\n    ['Days Since Last Heartbeat']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Heartbeat'] > 30\r\n| sort by ['Days Since Last Heartbeat'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/267b5a01-ef92-4be1-80d3-0c1b8a7dcbe4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect users attempting to access applications",
                "description": "Detect users trying to access multiple applications they haven't been granted access to over a short period of time\n",
                "body": "//Detect users trying to access multiple applications they haven't been granted access to over a short period of time\r\n//In this example alert when a user attempts to access 2 or more unique applications in 30 minutes\r\nSigninLogs\r\n| where ResultType == \"50105\"\r\n| summarize\r\n    ['Denied Application List']=make_set(AppDisplayName),\r\n    ['Count of Applications']=dcount(AppDisplayName)\r\n    by UserPrincipalName, bin(TimeGenerated, 30m)\r\n| where ['Count of Applications'] >= 2",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/27107571-89c3-4f57-81eb-6267301ca4cc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find third party MFA failures",
                "description": "Retrieve sign in failures due to third party MFA (Okta/Duo etc)",
                "body": "//Retrieve sign in failures due to third party MFA (Okta/Duo etc). Azure AD handles third party MFA different to native MS MFA. A user is sent to the third party MFA service and generates code 50158.\r\n//If successful the user then generates a success code 0. When third party MFA fails Azure AD logs the 50158 result code but no corresponding 0 result code.\r\n//Microsoft Sentinel query\r\nSigninLogs\r\n//Create a list of all result codes within a single sign in to Azure AD\r\n| summarize MFA=make_list(ResultType) by CorrelationId\r\n//Find correlation ids where the user was sent to third party MFA (ResultType 50158) but there is no subsequent success (ResultType 0)\r\n| where MFA has \"50158\" and MFA !has \"0\"\r\n//Join back to SigninLogs table to find the sign in details\r\n| join kind=inner (SigninLogs) on CorrelationId\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    UserType,\r\n    AppDisplayName,\r\n    IPAddress,\r\n    Location,\r\n    UserAgent,\r\n    ResultType",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/295efbb4-5a5a-4b00-bf2b-ae6dc5f7b145')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize guest tenants conditional access",
                "description": "Summarize which conditional access policies your inbound guests have logged any successes or failures against.",
                "body": "//Summarize which conditional access policies your inbound guests have logged any successes or failures against.\r\nSigninLogs\r\n| where TimeGenerated > ago (90d)\r\n| where UserType == \"Guest\"\r\n| where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n| project ConditionalAccessPolicies, UserPrincipalName, HomeTenantId\r\n| project-rename GuestTenantId=HomeTenantId\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend CAName = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult has_any (\"success\", \"failure\")\r\n| extend ['Conditional Access Result']=strcat(CAName, \" || \", CAResult)\r\n| summarize\r\n    ['Conditional Access Outcomes']=make_set(['Conditional Access Result'])\r\n    by\r\n    GuestTenantId\r\n| order by GuestTenantId asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/297cc9fd-74eb-4356-8ca2-92a2a14c441e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find risk events for anomalous token",
                "description": "When an anomalous token alert is flagged, find the specific risk events that flagged the alert\n",
                "body": "//When an anomalous token alert is flagged, find the specific risk events that flagged the alert\nlet alerts=\n    SecurityAlert\n    | where TimeGenerated > ago(1d)\n    | where AlertName == \"Anomalous Token\"\n    | mv-expand todynamic(Entities)\n    | project Entities\n    | extend RequestId = tostring(Entities.SessionId)\n    | distinct RequestId;\n//Detections can be offline so retrieve a weeks worth of risk data\nAADUserRiskEvents\n| where TimeGenerated > ago(7d)\n| where RequestId in (alerts)\n| project TimeGenerated, UserPrincipalName, RiskEventType, RiskLevel, DetectionTimingType, IpAddress, Location",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2a44a4fe-daef-4e29-924a-7cfd4ea8db83')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect multiple files shared to guests",
                "description": "Detect when a user shares multiple files to Azure AD guests over a short time frame.",
                "body": "//Detect when a user shares multiple files to Azure AD guests over a short time frame.\r\n//Define a time period to check and the threshold of how many files to alert on.\r\n//In this example it would detect when a user shares 10 or more files to a guest within 30 minutes\r\nlet timeframe=30m;\r\nlet threshold=10;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#EXT#\"\r\n| summarize\r\n    ['File Share Count']=dcount(OfficeObjectId),\r\n    ['List of Files']=make_set(OfficeObjectId)\r\n    by UserId, bin(TimeGenerated, timeframe)\r\n| where ['File Share Count'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2ad69fd4-1fce-4c19-9420-b4590ac5d6d2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect SSH traffic non standard port",
                "description": "Detect SSH traffic that isn't on port 22 connecting to public IP addresses",
                "body": "//Detect SSH traffic that isn't on port 22 connecting to public IP addresses\r\n//Microsft Sentinel query\r\nDeviceNetworkEvents\r\n| where ActionType == \"NetworkSignatureInspected\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend NetworkSignature = AF.SignatureName\r\n//Search for network signatures that are SSH but not on port 22\r\n| where NetworkSignature == \"SSH\" and RemotePort != 22\r\n//Exclude traffic where the remote IP is a private/local IP address, you can remove this if also interested in that traffic\r\n| where not(ipv4_is_private(RemoteIP))\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    NetworkSignature,\r\n    LocalIP,\r\n    LocalPort,\r\n    RemoteIP,\r\n    RemotePort,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2b22c64b-1d93-4b27-b1e3-c006ea611e7c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect virtual machine disk URL generated",
                "description": "Detect when a download URL is generated for an Azure virtual machine disk",
                "body": "//Detect when a download URL is generated for an Azure virtual machine disk\r\nAzureActivity\r\n| where OperationNameValue == \"MICROSOFT.COMPUTE/DISKS/BEGINGETACCESS/ACTION\"\r\n| where ActivityStatusValue == \"Success\"\r\n| extend DiskName = tostring(Properties_d.resource)\r\n| project\r\n    TimeGenerated,\r\n    Actor=Caller,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup,\r\n    DiskName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2d1a5ee6-65d6-484f-ac6b-ae6d52d1dad2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when a new app is installed to Teams",
                "description": "Detect when an app is installed into Teams for the first time compared to the previous timerange",
                "body": "//Detect when an app is installed into Teams for the first time compared to the previous timerange\r\nlet knownapps=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(180d) and TimeGenerated < ago(7d)\r\n    | where OfficeWorkload == \"MicrosoftTeams\"\r\n    | where Operation == \"AppInstalled\"\r\n    | distinct AzureADAppId;\r\nOfficeActivity\r\n| where TimeGenerated > ago (7d)\r\n| where OfficeWorkload == \"MicrosoftTeams\"\r\n| where Operation == \"AppInstalled\"\r\n| where AzureADAppId !in (knownapps)\r\n| project TimeGenerated, UserId, AddonName, AzureADAppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/31a63e94-cf76-49f7-8af0-7f24a4821323')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect MFA registration followed by SSPR",
                "description": "Detects when a user registers MFA details on their account and then completes self service password reset with a short timeframe\n",
                "body": "//Detects when a user registers MFA details on their account and then completes self service password reset with a short timeframe\r\nlet timeframe=4h;\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"User changed default security info\", \"User registered all required security info\", \"User registered security info\")\r\n| extend User = tostring(TargetResources[0].userPrincipalName)\r\n| project SecurityInfoTime=TimeGenerated, User, OperationName\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName in (\"Reset password (self-service)\", \"Change password (self-service)\")\r\n    | where Result == \"success\"\r\n    | extend User = tostring(TargetResources[0].userPrincipalName)\r\n    | project PasswordResetTime=TimeGenerated, OperationName, User)\r\n    on User\r\n| where (PasswordResetTime - SecurityInfoTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/338957f5-6c4e-496b-9076-8a235eab4da4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect golden ticket usage",
                "description": "When Defender for Identity detects suspected golden ticket usage, parse the relevant user accounts and host names",
                "body": "//When Defender for Identity detects suspected golden ticket usage, parse the relevant user accounts and host names\nSecurityAlert\n| where AlertName startswith \"Suspected Golden Ticket usage\"\n| mv-expand todynamic(Entities)\n| extend AccountName = tostring(Entities.Name)\n| extend HostName = tostring(Entities.HostName)\n| summarize\n    Accounts=make_list_if(AccountName, isnotempty(AccountName)),\n    Hosts=make_list_if(HostName, isnotempty(HostName))\n    by VendorOriginalId\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3630c45d-2433-4a5b-9a24-c416be691c3e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect account sensitivity change",
                "description": "Detect when the 'account is sensitive and cannot be delegated' flag on an account is changed\n",
                "body": "SecurityEvent\n| project TimeGenerated, EventID, TargetAccount, SubjectAccount, UserAccountControl\n| where EventID == \"4738\"\n| where UserAccountControl has_any(\"2094\", \"2062\")\n| extend Activity = case\n    (UserAccountControl contains \"2094\", strcat(\"Account Sensitivity Enabled\"),\n    UserAccountControl contains \"2062\", strcat(\"Account Sensitivity Disabled\"),\n    \"Unknown\")\n| project TimeGenerated, Target=TargetAccount, Actor=SubjectAccount, Activity\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/36811995-9b2f-49e0-a06f-426deac961c7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find email from suspicious sender",
                "description": "When a user is flagged for suspicious email sending patterns retrieve all the email they have sent around the time of the alert",
                "body": "//When a user is flagged for suspicious email sending patterns retrieve all the email they have sent around the time of the alert\nSecurityAlert\n| where TimeGenerated > ago (7d)\n| where ProviderName == \"OATP\"\n| where AlertName == \"Suspicious email sending patterns detected\"\n| mv-expand todynamic(Entities)\n| extend SenderFromAddress = tolower(tostring(Entities.MailboxPrimaryAddress))\n| project AlertTime=TimeGenerated, SenderFromAddress\n| join kind=inner (\n    EmailEvents\n    )\n    on SenderFromAddress\n| where EmailDirection == \"Outbound\"\n| where TimeGenerated between ((AlertTime - timespan(1h)) .. (AlertTime + timespan(1h)))\n| project TimeGenerated, Subject, AttachmentCount, RecipientEmailAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3744aa87-afdb-485c-9e03-534aaa1f7bc3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize total vs distinct signins to app",
                "description": "Visualize the difference been total and distinct user sign ins to an app per day\n",
                "body": "//Visualize the difference been total and distinct user sign ins to an app per day\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n//Change to whichever app you are interested in\r\n| where AppDisplayName == \"Office 365 Exchange Online\"\r\n| where ResultType == 0\r\n| summarize ['Total Signins']=count(), ['Distinct user signins']=dcount(UserPrincipalName) by bin(TimeGenerated, 1d)\r\n| render timechart\r\n    with (\r\n    title=\"Total vs Distinct signins to Exchange Online\",\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/37495adc-2bf1-4994-8b0d-f631ef672add')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect possible phishing via DNS",
                "description": "When Defender for Cloud detects a possible DNS lookup to a phishing domain attempt to find if the URL was part of an email phishing attack",
                "body": "//When Defender for Cloud detects a possible DNS lookup to a phishing domain attempt to find if the URL was part of an email phishing attack\r\nlet suspiciousdomains=\r\n    SecurityAlert\r\n    | where AlertName startswith \"Communication with possible phishing domain\"\r\n    | mv-expand todynamic(Entities)\r\n    | extend DomainName = tostring(Entities.DomainName)\r\n    | where isnotempty(DomainName)\r\n    | distinct DomainName;\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    NetworkMessageId\r\n| join kind=inner (EmailUrlInfo) on NetworkMessageId\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    Url,\r\n    UrlDomain\r\n| where UrlDomain in~ (suspiciousdomains)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/38daf971-db91-4435-902c-9754843d7acc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Summarize Defender for Identity alert",
                "description": "Parse all the relevant entities - hosts, accounts, IP addresses, files, groups, resources and times from Defender for Identity alerts",
                "body": "//Parse all the relevant entities - hosts, accounts, IP addresses, files, groups, resources and times from Defender for Identity alerts\r\nSecurityAlert\r\n| where ProviderName == \"Azure Advanced Threat Protection\"\r\n| summarize arg_max(TimeGenerated, *) by VendorOriginalId\r\n| mv-expand todynamic(Entities)\r\n| extend x = parse_json(Entities)\r\n| extend Host = x.HostName\r\n| extend Account = x.Name\r\n| extend IP = x.Address\r\n| extend File = x.File\r\n| extend Group = x.Group\r\n| extend ResourceId = x.ResourceName\r\n| extend Time= x.Time\r\n| summarize\r\n    HostNames=make_set(Host),\r\n    AccountNames=make_set(Account),\r\n    IPAddresses=make_set(IP),\r\n    Files=make_set(File),\r\n    SecurityGroups=make_set(Group),\r\n    Resources=make_set(ResourceId),\r\n    TimeAccessed=make_set(Time)\r\n    by TimeGenerated, SystemAlertId, AlertName, Description",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3b4a8386-6149-4753-a9df-a9048e053b3b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize legacy auth",
                "description": "Summarize legacy auth authentications by type (such as ActiveSync, IMAP etc) and which accounts are using those protocols",
                "body": "//Microsoft Sentinel query\r\n//Union both interactive and non interactive sign in logs. If you only use Signin logs then just replace with SigninLogs\r\nunion SigninLogs, AADNonInteractiveUserSignInLogs\r\n//\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize ['Count of legacy auth attempts'] = count()by ClientAppUsed, UserPrincipalName\r\n| sort by ClientAppUsed asc, ['Count of legacy auth attempts'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3d62f3e2-3726-4454-99fb-342efa8ac4ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect anomalous RDP connections",
                "description": "Visualizes potentially anomalous RDP connections from your devices",
                "body": "//Visualizes potentially anomalous RDP connections from your devices.\r\n//Starttime and timeframe = how many days of data to look at to build your data set and in what grouping, i.e 30 days of data over 2 hour periods.\r\n//Threshold = the amount of total RDP connections required to be included in anomaly calculations. Reduces noise from low level anomalies, e.g going from 1 connection to 2.\r\n//Sensitivity = adjust to make the query more or less sensitive, the higher the value, the greater the anomaly required to be detected.\r\nlet starttime = 30d;\r\nlet timeframe = 2h;\r\nlet sensitivity = 3;\r\nlet threshold = 5;\r\nlet outlierdevices=\r\n    DeviceNetworkEvents\r\n    | where TimeGenerated > ago(starttime)\r\n    | where LocalIPType == \"Private\"\r\n    | where RemotePort == \"3389\"\r\n    // Exclude Defender for Identity which uses RDP to map your network\r\n    | where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n    | project TimeGenerated, DeviceName\r\n    | order by TimeGenerated\r\n    | summarize RDPEvents=count()by DeviceName, bin(TimeGenerated, timeframe)\r\n    | where RDPEvents > threshold\r\n    | summarize EventCount=make_list(RDPEvents), TimeGenerated=make_list(TimeGenerated) by DeviceName\r\n    | extend outliers=series_decompose_anomalies(EventCount, sensitivity)\r\n    | mv-expand TimeGenerated, EventCount, outliers\r\n    | where outliers == 1\r\n//Optionally visualize the anomalies, remove everything below this line to just retrieve the data\r\n    | distinct DeviceName;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(starttime)\r\n| where DeviceName in (outlierdevices)\r\n| where LocalIPType == \"Private\"\r\n| where RemotePort == \"3389\"\r\n| where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n| summarize RDPCount=count() by DeviceName, bin(TimeGenerated, timeframe)\r\n| render timechart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3ff998c2-452d-4609-b369-19fe56bfb552')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize total vs distinct entity alerts",
                "description": "Visualize your total alerts vs distinct entity alerts per week. Will let you see if you have lots of entities being attacked, or a few being attacked often.",
                "body": "//Visualize your total alerts vs distinct entity alerts per week\r\nSecurityAlert\r\n| where TimeGenerated > ago(180d)\r\n//Exclude alerts generated by Microsoft Sentinel itself if you don't wish to double count them\r\n| where ProductName != \"ASI Scheduled Alerts\"\r\n| where Status == \"New\"\r\n| summarize\r\n    ['Total Security Alerts']=count(),\r\n    ['Unique Entity Alerts']=dcountif(CompromisedEntity, isnotempty(CompromisedEntity))\r\n    by bin(TimeGenerated, 7d)\r\n| render timechart with (title=\"Total Security Alerts vs Unique Entity Alerts\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/44f70392-a290-4de1-bbdc-24430b641a97')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time credential addition",
                "description": "Detects users who have added a credential to an Azure AD App for the first time in 90 days, adjust timeframe as needed.\n",
                "body": "//Detects users who have added a credential to an Azure AD App for the first time in 90 days, adjust timeframe as needed.\r\nlet timeframe = startofday(ago(90d));\r\nAuditLogs\r\n| where TimeGenerated > timeframe and TimeGenerated < startofday(now())\r\n| where OperationName has \"Update application – Certificates and secrets management\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project Actor\r\n| join kind=rightanti\r\n    (\r\n    AuditLogs\r\n    | where TimeGenerated > startofday(now())\r\n    | where OperationName has \"Update application – Certificates and secrets management\"\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend AppId = tostring(AdditionalDetails[1].value)\r\n    | project TimeGenerated, Actor, AppId\r\n    )\r\n    on Actor\r\n| project TimeGenerated, Actor, AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/45106851-4b12-4616-902e-5f5b97b8284b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find accounts with most local admin privilege",
                "description": "Find which of your accounts have logged onto the most devices with local admin credentials. These accounts are potential targets for lateral movement and privilege escalation\n",
                "body": "//Find which of your accounts have logged onto the most devices with local admin credentials. These accounts are potential targets for lateral movement and privilege escalation\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(30d)\r\n| project DeviceName, ActionType, LogonType, AdditionalFields, InitiatingProcessCommandLine, AccountName, IsLocalAdmin\r\n| where ActionType == \"LogonSuccess\"\r\n| where LogonType == \"Interactive\"\r\n| where AdditionalFields.IsLocalLogon == true\r\n| where InitiatingProcessCommandLine == \"lsass.exe\"\r\n| summarize\r\n    ['Local Admin Count']=dcountif(DeviceName,IsLocalAdmin == \"true\"),\r\n    ['Local Admins']=make_set_if(DeviceName, IsLocalAdmin == \"true\")\r\n    by AccountName\r\n| sort by ['Local Admin Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/47b2118f-e9a3-418f-80fa-00f957044c6c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect encoded PowerShell",
                "description": "Detects encoded PowerShell commands and then decodes the encoded string",
                "body": "//Finds encoded PowerShell commands and then decodes the encoded string\r\n//Query modified from this post - https://techcommunity.microsoft.com/t5/microsoft-sentinel/finding-base64-encoded-commands/m-p/1891876\r\nDeviceProcessEvents\r\n| where ProcessCommandLine contains \"powershell\" or InitiatingProcessCommandLine contains \"powershell\"\r\n| where ProcessCommandLine contains \"-enc\"\r\n    or ProcessCommandLine contains \"-encodedcommand\"\r\n    or InitiatingProcessCommandLine contains \"-enc\"\r\n    or InitiatingProcessCommandLine contains \"-encodedcommand\"\r\n//Extract encoded command using regex\r\n//This query will only return results when the command can be matched via regex and decoded, if you run only the above lines it will return all encoded commands without attempting to match and decode\r\n| extend EncodedCommand = extract(@'\\s+([A-Za-z0-9+/]{20}\\S+$)', 1, ProcessCommandLine)\r\n| where EncodedCommand != \"\"\r\n| extend DecodedCommand = base64_decode_tostring(EncodedCommand)\r\n| where DecodedCommand != \"\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    ProcessCommandLine,\r\n    EncodedCommand,\r\n    DecodedCommand",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/492824da-0c27-4e41-98af-ac51fba51fbc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect Azure AD role added and removed quickly",
                "description": "Detect when a user is added and removed from an Azure AD role within a short time frame",
                "body": "//Detect when a user is added and removed from an Azure AD role within a short time frame\r\n//Timerange = the amount of data to look back on, timeframe = the time between the role being added and removed\r\nlet timerange=7d;\r\nlet timeframe=4h;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName == \"Add member to role\"\r\n| where Result == \"success\"\r\n//Exclude role additions from Azure AD PIM\r\n| where Identity <> \"MS-PIM\"\r\n| extend User = tostring(TargetResources[0].userPrincipalName)\r\n| extend Role = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend UserWhoAdded = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeAdded=TimeGenerated, User, Role, UserWhoAdded\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (timerange)\r\n    | where OperationName == \"Remove member from role\"\r\n    //Exclude role removals from Azure AD PIM\r\n    | where Result == \"success\"\r\n    | where Identity <> \"MS-PIM\"\r\n    | extend User = tostring(TargetResources[0].userPrincipalName)\r\n    | extend Role = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue)))\r\n    | extend UserWhoRemoved = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | project TimeRemoved=TimeGenerated, User, Role, UserWhoRemoved\r\n    )\r\n    on User, Role\r\n| extend ['Time User Held Role'] = TimeRemoved - TimeAdded\r\n| where ['Time User Held Role'] < ['timeframe']\r\n| project\r\n    TimeAdded,\r\n    TimeRemoved,\r\n    ['Time User Held Role'],\r\n    User,\r\n    Role,\r\n    UserWhoAdded,\r\n    UserWhoRemoved",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4c5192a0-8c66-4c4e-b98d-503883855628')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect SSPR at suspicious times",
                "description": "Detect successful self service password resets at suspicious times",
                "body": "//Detect successful self service password resets at suspicious times\r\nAuditLogs\r\n// extend LocalTime to your time zone\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where LocalTime > ago(7d)\r\n| where OperationName == \"Reset password (self-service)\"\r\n| where ResultDescription == \"Successfully completed reset.\"\r\n// Change hours of the day to suit your company, i.e this would find self service password reset events between 11pm and 4am\r\n| where hourofday(LocalTime) !between (4 .. 23)\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['IP Address of User'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project LocalTime, OperationName, ResultDescription, User, ['IP Address of User']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4df45ea7-cfd3-4f8f-aaa5-99e0d5899339')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize current service principal permissions",
                "description": "Summarize your Azure AD service principals by what permissions they currently hold\n",
                "body": "//Summarize your Azure AD apps by what permissions they currently hold\r\n//Find applications that have been deleted\r\nlet deletedapps=\r\nAuditLogs\r\n| where OperationName == \"Remove service principal\"\r\n| extend ServicePrincipalId = tostring(TargetResources[0].id)\r\n| project ServicePrincipalId;\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| mv-expand ['Permissions granted']\r\n| where isnotempty( ['Permissions granted'])\r\n//Extend new permission field\r\n| summarize ['Permission List']=make_set(['Permissions granted']) by ['Permission type'], ServicePrincipalId\r\n| extend ['Number of Permissions']=array_length(['Permission List']) \r\n| sort by ServicePrincipalId desc, ['Permission type'] asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4ef076bc-1a04-40c2-93e9-fc51b27d804b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect when a resource lock added or removed",
                "description": "Detect when a resource lock is added or removed from an Azure resource",
                "body": "AzureActivity\r\n| where OperationNameValue in (\"MICROSOFT.AUTHORIZATION/LOCKS/WRITE\", \"MICROSOFT.AUTHORIZATION/LOCKS/DELETE\")\r\n| where ActivityStatusValue == \"Success\"\r\n| extend Activity = case(OperationNameValue == \"MICROSOFT.AUTHORIZATION/LOCKS/WRITE\", strcat(\"Resource Lock Added\"),\r\n    OperationNameValue == \"MICROSOFT.AUTHORIZATION/LOCKS/DELETE\", strcat(\"Resource Lock Removed\"),\r\n    \"unknown\")\r\n| extend ResourceGroup = tostring(parse_json(Properties).resourceGroup)\r\n| extend AzureResource = tostring(parse_json(Properties).resourceProviderValue)\r\n| extend x = tostring(parse_json(Properties).resource)\r\n| parse x with ResourceName \"/\" *\r\n| parse x with * \"microsoft.authorization/\" LockName\r\n| project\r\n    TimeGenerated,\r\n    Activity,\r\n    ResourceName,\r\n    ['Azure Resource']=AzureResource,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup,\r\n    LockName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4fb9ebdc-584a-4120-85df-e637d5ad1711')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize MFA methods over time",
                "description": "Visualize the MFA types used by your users - phone sign in, mobile passcode, push or text message, over time",
                "body": "//Visualize the MFA types used by your users - phone sign in, mobile passcode, push or text message, over time\r\nSigninLogs\r\n| where TimeGenerated > ago (180d)\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| project TimeGenerated, AuthenticationDetails\r\n| extend ['MFA Method'] = tostring(parse_json(AuthenticationDetails)[1].authenticationMethod)\r\n| summarize Count=count()by ['MFA Method'], bin(TimeGenerated, 7d)\r\n| where ['MFA Method'] != \"Previously satisfied\" and isnotempty(['MFA Method']) \r\n| render timechart with (ytitle=\"Count\", xtitle=\"Day\", title=\"MFA methods per week over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/502ba37f-c059-4364-96af-c23de0005e14')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize permissions granted to service principals",
                "description": "Summarize the permissions granted to your Azure AD apps over the last year",
                "body": "//Summarize the permissions granted to your Azure AD apps over the last year\r\n//Find applications that have been deleted\r\nlet deletedapps=\r\nAuditLogs\r\n| where OperationName == \"Remove service principal\"\r\n| extend ServicePrincipalId = tostring(TargetResources[0].id)\r\n| project ServicePrincipalId;\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| mv-expand ['Permissions granted']\r\n| where isnotempty( ['Permissions granted'])\r\n//Extend new permission field\r\n| extend Permission = strcat(['Permission type'],\" - \",['Permissions granted'])\r\n| summarize PermissionCount=count()by Permission\r\n| sort by PermissionCount desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/525811ee-2d6a-4398-8bde-597a804f8597')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize risk event types per month",
                "description": "Visualize the different risk types (e.g password spray, unlikely travel) per month",
                "body": "//Visualize the different risk types (e.g password spray, unlikely travel) per month\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (180d)\r\n| where isnotempty(RiskEventType)\r\n| summarize Count=count()by RiskEventType, startofmonth(TimeGenerated)\r\n| render columnchart with (kind=unstacked, title=\"Risk event types per month\", xtitle=\"Month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/53842eab-7adb-4e84-8a93-e02534d93f5b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find most Conditional Access failures",
                "description": "Find which users are failing the most Conditional Access policies",
                "body": "//Find which users are failing the most Conditional Access policies, retrieve the total failure count, distinct policy count and the names of the failed policies\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, ConditionalAccessPolicies, UserPrincipalName\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend CAPolicyName = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult == \"failure\"\r\n| summarize\r\n    ['Total Conditional Access Failures']=count(),\r\n    ['Distinct Policy Failure Count']=dcount(CAPolicyName),\r\n    ['Policy Names']=make_set(CAPolicyName)\r\n    by UserPrincipalName\r\n| sort by ['Distinct Policy Failure Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/551ae78f-9f60-41dd-ba2c-4a52abf1b430')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize legacy auth methods by app",
                "description": "Visualize legacy auth method (i.e Activesync, IMAP etc) by distinct user count over time",
                "body": "//Visualize legacy auth method (i.e Activesync, IMAP etc) by distinct user count over time\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n| where ResultType == 0\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize Count=dcount(UserPrincipalName) by ClientAppUsed, bin (TimeGenerated, 1d)\r\n| render timechart with (title=\"Legacy auth methods by distinct user over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/557ef3fc-91aa-4763-8f1e-ffd8de96e881')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time service principal creation",
                "description": "Detects users who add a service principal to Azure AD for the first time.",
                "body": "//Detects users who add a service principal to Azure AD for the first time.\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName == \"Add service principal\"\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where isnotempty(Actor)\r\n    | distinct Actor;\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Add service principal\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where isnotempty(Actor)\r\n| where Actor !in (knownusers)\r\n| extend AppId = tostring(AdditionalDetails[1].value)\r\n| project TimeGenerated, Actor, AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/55926c36-2356-4755-9c21-8e368ace84e4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect first time storage key retrieval",
                "description": "Detect when a user retrieves keys for Azure storage for the first time compared to the previous time range\n",
                "body": "//Detect when a user retrieves keys for Azure storage for the first time compared to the previous time range\r\nlet knownusers=\r\n    AzureActivity\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName == \"List Storage Account Keys\"\r\n    | where ActivityStatus == \"Succeeded\"\r\n    | project-rename Actor=Caller\r\n    | distinct Actor;\r\nAzureActivity\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"List Storage Account Keys\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| project-rename Actor=Caller\r\n| where Actor !in (knownusers)\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Storage Account Name']=Resource,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5826cf50-d282-4741-b507-4a7f9a666c63')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DNS - Find stale domains",
                "description": "Find DNS domains that have not been queried in the last 30 days. These are potentially stale and should be removed.",
                "body": "//Find DNS domains that have not been queried in the last 30 days. These are potentially stale and should be removed.\r\nlet domain=\"yourdomain.com\";\r\nDnsEvents\r\n| where TimeGenerated > ago(180d)\r\n| where SubType == \"LookupQuery\"\r\n| where QueryType == \"A\"\r\n| where Name endswith domain\r\n| summarize LookupCount=count()by Name\r\n//Set a threshold for total lookups to be included, to account for typos and low volume queries\r\n| where LookupCount > 50\r\n| join kind=leftanti \r\n    (\r\n    DnsEvents\r\n    | where TimeGenerated > ago(30d)\r\n    | where SubType == \"LookupQuery\"\r\n    | where QueryType == \"A\"\r\n    | where Name endswith domain\r\n    | summarize arg_max(TimeGenerated, Name) by Name\r\n    | project TimeGenerated, Name)\r\n    on Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/59598c37-cd25-4c35-aef2-8691f8b60788')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize MFA challenge vs previously satisfied",
                "description": "Visualize when your users are actively challenged for MFA vs when it was previously satisfied",
                "body": "//Visualize when your users are actively challenged for MFA vs when it was previously satisfied\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| project TimeGenerated, AuthenticationDetails\r\n| extend MFAResultStep = tostring(AuthenticationDetails.authenticationStepResultDetail)\r\n| summarize\r\n    MFARequired=countif(MFAResultStep == \"MFA completed in Azure AD\"),\r\n    PreviouslySatisfied=countif(MFAResultStep == \"MFA requirement satisfied by claim in the token\")\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart\r\n    with (\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count\",\r\n    title=\"MFA challenges vs MFA previously satisfied over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/59fc3a91-1d6b-404a-977c-0d713b13149b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect first time whoami command",
                "description": "Detect when a 'whoami' command is sent for the first time from a device & account combination not seen before",
                "body": "//Detect when a 'whoami' command is sent for the first time from a device & account combination not seen before\r\nDeviceProcessEvents\r\n| where TimeGenerated > ago (30d) and TimeGenerated < ago(1d)\r\n| project DeviceName, InitiatingProcessAccountName, InitiatingProcessCommandLine\r\n| where InitiatingProcessCommandLine contains \"whoami\"\r\n| distinct DeviceName, InitiatingProcessAccountName\r\n| join kind=rightanti (\r\n    DeviceProcessEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | project\r\n        TimeGenerated,\r\n        DeviceName,\r\n        InitiatingProcessAccountName,\r\n        InitiatingProcessCommandLine\r\n    | where InitiatingProcessCommandLine contains \"whoami\"\r\n    )\r\n    on DeviceName, InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5aac0b48-0768-41f0-a246-c8c4bd66fe7c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize SSPR and account unlocks",
                "description": "Visualize successful self service password resets and account unlocks over time",
                "body": "//Visualize successful self service password resets and account unlocks over time\r\nAuditLogs\r\n| where TimeGenerated > ago (180d)\r\n| where OperationName in (\"Reset password (self-service)\", \"Unlock user account (self-service)\")\r\n| summarize\r\n    ['Password Reset']=countif(OperationName == \"Reset password (self-service)\" and ResultDescription == \"Successfully completed reset.\"),\r\n    ['Account Unlock']=countif(OperationName == \"Unlock user account (self-service)\" and ResultDescription == \"Success\")\r\n    by startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    ytitle=\"Count\",\r\n    xtitle=\"Day\",\r\n    title=\"Self Service Password Resets and Account Unlocks over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5cd331fc-9b3c-45e1-95f3-50e6a9fed61b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect label downgrade then copy to USB",
                "description": "Detects when a user downgrades a label on a file and that file is then copied to USB\n",
                "body": "// Detects when a user downgrades a label on a file and that file is then copied to USB\r\n// Timeframe = the time between the label downgrade and file copy event\r\nlet timeframe=4h;\r\nInformationProtectionEvents\r\n| where Time > ago(1d)\r\n| where Activity == \"DowngradeLabel\"\r\n| project LabelChangeTime=Time, User, FileDowngraded=ItemName\r\n| join kind=inner (\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | where ActionType == \"UsbDriveMounted\"\r\n    | extend DriveLetter = tostring(todynamic(AdditionalFields).DriveLetter)\r\n    | join kind=inner (DeviceFileEvents\r\n        | where TimeGenerated > ago(1d)\r\n        | project TimeGenerated, ActionType, FileName, FolderPath, DeviceId, DeviceName\r\n        | extend FileCopyTime = TimeGenerated\r\n        | where ActionType == \"FileCreated\"\r\n        | extend FileCopyName = FileName\r\n        | parse FolderPath with DriveLetter '\\\\' *\r\n        | extend DriveLetter = tostring(DriveLetter)\r\n        )\r\n        on DeviceId, DriveLetter) \r\n    on $left.FileDowngraded == $right.FileCopyName\r\n| project LabelChangeTime, FileCopyTime, FileDowngraded, DeviceName, AccountName\r\n| where (FileCopyTime - LabelChangeTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Information Protection"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5d0b58dd-b769-4762-bd67-2f36c6359ac1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principals failing to sign in",
                "description": "Finds service principals failing to sign in and adds an easy to read error message to why",
                "body": "AADServicePrincipalSignInLogs\r\n| where ResultType != \"0\"\r\n| extend ErrorDescription = case (\r\n    ResultType == \"7000215\", strcat(\"Invalid client secret is provided\"),\r\n    ResultType == \"7000222\", strcat(\"The provided client secret keys are expired\"),\r\n    ResultType == \"700027\", strcat(\"Client assertion failed signature validation\"),\r\n    ResultType == \"700024\", strcat(\"Client assertion is not within its valid time range\"),\r\n    ResultType == \"70021\", strcat(\"No matching federated identity record found for presented assertion\"),\r\n    ResultType == \"500011\", strcat(\"The resource principal named {name} was not found in the tenant named {tenant}\"),\r\n    ResultType == \"700082\", strcat(\"The refresh token has expired due to inactivity\"),\r\n    ResultType == \"90025\", strcat(\"Request processing has exceeded gateway allowance\"),\r\n    ResultType == \"500341\", strcat(\"The user account {identifier} has been deleted from the {tenant} directory\"),\r\n    ResultType == \"100007\", strcat(\"AAD Regional ONLY supports auth either for MSIs OR for requests from MSAL using SN+I for 1P apps or 3P apps in Microsoft infrastructure tenants\"),\r\n    ResultType == \"1100000\", strcat(\"Non-retryable error has occurred\"),\r\n    ResultType == \"90033\", strcat(\"A transient error has occurred. Please try again\"),\r\n    ResultType == \"53003\", strcat(\"Access has been blocked by Conditional Access policies. The access policy does not allow token issuance.\"),\r\n    \"Unknown\"\r\n    )\r\n| project\r\n    TimeGenerated,\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    ErrorDescription,\r\n    ResultType,\r\n    IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5db95b56-2365-460c-88c4-2ce607e90bfb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect anomlous guest downloads",
                "description": "Detect anomalies in the amount of downloads from your Office 365 tenant by guest accounts and optionally visualize",
                "body": "//Detect anomalies in the amount of downloads from your Office 365 tenant by guest accounts.\r\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\r\nlet startdate=21d;\r\nlet enddate=1d;\r\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\r\nlet timeframe=1h;\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity=2;\r\n//Threshold = set this to tune out low count anomalies, i.e when total downloads are only over 300 per hour\r\nlet threshold=300;\r\nlet outlierusers=\r\nOfficeActivity\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where Operation in (\"FileSyncDownloadedFull\",\"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| make-series GuestDownloads=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId\r\n| extend outliers=series_decompose_anomalies(GuestDownloads, sensitivity)\r\n| mv-expand TimeGenerated, GuestDownloads, outliers\r\n| where outliers == 1 and GuestDownloads > threshold\r\n//Optionally visualize the anomalies - remove everything below this line to just retrieve the data instead of visualizing\r\n| distinct UserId;\r\nOfficeActivity\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where Operation in (\"FileSyncDownloadedFull\",\"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| where UserId in (outlierusers)\r\n| make-series GuestDownloads=count() default=0 on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId \r\n| render timechart with (ytitle=\"Download Count\",title=\"Anomalous Guest Downloads from Office 365\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5e21c3e0-7d79-43b0-b779-1acb7e2304ee')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize playbook interactions on Sentinel incidents",
                "description": "Visualize which playbooks are interacting with security incidents ",
                "body": "//Visualize which playbooks are interacting with security incidents\nlet timeframe=45d;\nSecurityIncident\n| where TimeGenerated > ago (timeframe)\n| where ModifiedBy startswith \"Playbook\"\n| summarize Count=count() by ModifiedBy\n| sort by Count desc \n| render barchart\n    with (\n    title=\"Count of playbooks interacting with Microsoft Sentinel incidents\",\n    ytitle=\"Playbook Name\")  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5e5f5ba2-2ff7-48d3-bb2d-d3429c27eb7d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device last contact",
                "description": "Visualize when your devices last contacted Intune",
                "body": "//Visualize when your devices last contacted Intune\r\nIntuneDevices\r\n| where TimeGenerated > ago(90d)\r\n| where isnotempty(LastContact)\r\n//Retrieve latest record for each DeviceId\r\n| summarize arg_max(TimeGenerated, *) by DeviceId\r\n//Convert string to datetime format\r\n| extend LastContactTime = todatetime(LastContact)\r\n| project DeviceId, LastContactTime\r\n//Exclude devices reporting as 0001-01-01\r\n| where LastContactTime <> todatetime('0001-01-01T00:00:00Z')\r\n//Group by month and render chart\r\n| summarize ['Device Count']=count()by startofmonth(LastContactTime)\r\n| render columnchart with (title=\"Intune devices by last contact time\", xtitle=\"Month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5eb8eae0-547a-47fb-bbb7-1ecec2a74ce1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive privileged users",
                "description": "Find users who hold privileged Azure AD roles but haven't signed onto Azure for 30 days",
                "body": "//Find users who hold privileged Azure AD roles but haven't signed onto Azure for 30 days\r\nlet applications = dynamic([\"Azure Active Directory PowerShell\", \"Microsoft Azure PowerShell\", \"Graph Explorer\", \"ACOM Azure Website\", \"Azure Portal\", \"Azure Advanced Threat Protection\"]);\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where isnotempty(AssignedRoles)\r\n| project-rename UserPrincipalName=AccountUPN\r\n| where AssignedRoles != \"[]\"\r\n| summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n| join kind=leftanti (\r\n    SigninLogs\r\n    | where TimeGenerated > ago(30d)\r\n    | where AppDisplayName in (applications)\r\n    | where ResultType == \"0\"\r\n    )\r\n    on UserPrincipalName\r\n| project UserPrincipalName, AssignedRoles",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5ed18257-780c-499a-9a05-3cb85158374e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize ASR audit hits",
                "description": "Summarize attack surface reduction audit hits for each device",
                "body": "//Summarize attack surface reduction audit hits for each device\r\nDeviceEvents\r\n| where TimeGenerated > ago (1d)\r\n| where ActionType startswith \"Asr\"\r\n| extend isAudit = tostring(AdditionalFields.IsAudit)\r\n| where isAudit = true\r\n| project\r\n    TimeGenerated,\r\n    ActionType,\r\n    DeviceName,\r\n    FileName,\r\n    InitiatingProcessAccountDomain,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    InitiatingProcessParentFileName,\r\n    ProcessTokenElevation\r\n| summarize\r\n    ['Total ASR audit hits']=count(),\r\n    ['Distinct ASR audit rule hits']=dcount(ActionType),\r\n    ['List of processes']=make_set(InitiatingProcessCommandLine)\r\n    by DeviceName\r\n| sort by ['Total ASR audit hits'] desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5ef90e7c-8a1e-4e62-aefd-10dc3d452816')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect application URI changes",
                "description": "Alert when the redirect URI list is changed for a service principal\n",
                "body": "//Alert when the redirect URI list is changed for a service principal\r\nAuditLogs\r\n| where OperationName == \"Update service principal\"\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties \r\n| where modifiedProperties.displayName == \"AppAddress\" \r\n| extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n| mv-expand todynamic(newValue)\r\n| extend RedirectURI = tostring(newValue.Address)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Service Principal Name'] = tostring(TargetResources.displayName)\r\n| summarize ['List of Redirect URIs']=make_list(RedirectURI) by Actor, ['Service Principal Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5f216f79-516b-4eff-9e5d-59ca651e9b2b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Visualize queries run against the Log Analytics workspace",
                "description": "Visualizes queries against your log analytics workspace categorized by users and service principals (such as playbooks or other automation)",
                "body": "//Visualizes queries against your log analytics workspace categorized by users and service principals\r\nlet timeframe=45d;\r\nLAQueryLogs\r\n| where TimeGenerated > ago (timeframe)\r\n| summarize Users=countif(isnotempty(AADEmail)), Playbooks=countif(isempty(AADEmail)) by bin(TimeGenerated, 1d)\r\n| render columnchart with (kind=unstacked, ytitle=\"Queries Run\", title=\"Queries Run - Users vs Playbooks\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5f7a9964-04f1-47db-8420-616d47542571')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when Bitlocker key read",
                "description": "//Detects when a BitLocker key is read in Azure AD and retrieves the device and key ids",
                "body": "//Detects when a BitLocker key is read in Azure AD and retrieves the device and key ids\r\nAuditLogs\r\n| where OperationName == \"Read BitLocker key\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend s = tostring(AdditionalDetails[0].value)\r\n| parse s with * \"ID: '\" KeyId \"'\" *\r\n| parse s with * \"device: '\" DeviceId \"'\"\r\n| project TimeGenerated, OperationName, Actor, KeyId, DeviceId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/62861bc1-21fa-40be-bacb-5405e7f04545')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize guests added vs removed in Teams",
                "description": "Visualize guests added vs removed from Teams per day over the last 30 days",
                "body": "//Visualize guests added vs removed from Teams per day over the last 30 days\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where UserType == \"Regular\"\r\n| where CommunicationType == \"Team\"\r\n| where OfficeWorkload == \"MicrosoftTeams\" \r\n| where Operation in (\"MemberAdded\", \"MemberRemoved\")\r\n| mv-expand Members\r\n| extend User = tostring(Members.UPN)\r\n| where User contains \"#EXT#\"\r\n| project TimeGenerated, Operation, User\r\n| summarize\r\n    ['Guests Added']=countif(Operation == \"MemberAdded\"),\r\n    ['Guests Removed']=countif(Operation == \"MemberRemoved\")\r\n    by startofday(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    xtitle=\"Count\",\r\n    ytitle=\"Day\",\r\n    title=\"Guests Added vs Removed from Teams\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/62a04f0a-13f4-465d-a65f-4b90e7e7f12e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time PIM activation outside working hours",
                "description": "Detects when a user activates a PIM role for the first time on weekends or after working hours",
                "body": "//Detects when a user activates a PIM role for the first time on weekends or after working hours\r\nlet Saturday = time(6.00:00:00);\r\nlet Sunday = time(0.00:00:00);\r\nlet timeframe = 90d;\r\n//Find users who have previously activated PIM roles outside of business hours or on weekends in the last 90 days\r\n//In this example business hours are 6am to 6pm\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(timeframe) and TimeGenerated < ago(7d)\r\n    // extend LocalTime to your time zone\r\n    | extend LocalTime=TimeGenerated + 5h\r\n    // Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\r\n    | where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\r\n    | where OperationName == \"Add member to role completed (PIM activation)\"\r\n    | extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | distinct User;\r\n//Find users who activate a PIM role outside of business hours or on weekends for the first time in the last week\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where User !in (knownusers)\r\n| project LocalTime, User, ['Azure AD Role Name'], ['Activation Reason']=ResultReason",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/64033af2-66d1-4350-acff-92afa77e4e22')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find devices no longer sending events",
                "description": "Find devices that have stopped sending network events over the last 30 days, retrieve last event time and calculate the days since last event",
                "body": "DeviceNetworkEvents\r\n| project TimeGenerated, DeviceName\r\n| where TimeGenerated > ago(365d)\r\n| summarize arg_max(TimeGenerated, DeviceName) by DeviceName\r\n| project DeviceName, ['Days Since Last Event'] = datetime_diff('day', now(), TimeGenerated), ['Last Event Time']=TimeGenerated\r\n| where ['Days Since Last Event'] > 30\r\n| sort by ['Days Since Last Event'] desc   ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/648032d1-5113-4b41-a7ec-46f68ce43d35')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize inbound guest activity",
                "description": "Summarize the domain names, the count of users and list of users for each guest tenant connecting to your Azure AD tenant",
                "body": "\r\n//Summarize the domain names, the count of users and list of users for each guest tenant connecting to your Azure AD tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    HomeTenantId,\r\n    AADTenantId,\r\n    Id,\r\n    ResourceTenantId,\r\n    ResourceIdentity,\r\n    UserId\r\n| where UserId != \"00000000-0000-0000-0000-000000000000\"\r\n| where ResourceIdentity != ''\r\n| where HomeTenantId != ''\r\n| where HomeTenantId != AADTenantId\r\n| extend GuestDomain = split(UserPrincipalName, '@')[-1]\r\n| summarize\r\n    ['Guest Domain Names']=make_set(GuestDomain),\r\n    ['Distinct User Count']=dcount(UserPrincipalName),\r\n    ['List of Guest Users']=make_set(UserPrincipalName)\r\n    by HomeTenantId\r\n| sort by ['Distinct User Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/67389da5-3da2-406b-93de-8e3303e8b89e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize daily group additions",
                "description": "Create a daily summary of Azure Active Directory group additions",
                "body": "let timerange=7d;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName == \"Add member to group\"\r\n| extend Type = tostring(TargetResources[0].type)\r\n| where Type == \"User\"\r\n| extend ['Group Name'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend UserAdded = tostring(TargetResources[0].userPrincipalName)\r\n| where isnotempty(UserAdded)\r\n| summarize ['Users Added']=make_set(UserAdded) by ['Group Name'], startofday(TimeGenerated)\r\n| sort by ['Group Name'] asc, TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/68bfe1e6-c8bc-4976-bea4-a6878caa869e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize most popular phishing domains",
                "description": "Visualize the most popular weaponized domains in the phishing emails your users receive\n",
                "body": "//Visualize the most popular weaponized domains in the phishing emails your users receive\nSecurityAlert\n| where TimeGenerated > ago(365d)\n| where ProviderName == \"OATP\"\n| where AlertName in (\"Email messages containing malicious URL removed after delivery​\",\"Email messages containing phish URLs removed after delivery\")\n| mv-expand todynamic(Entities)\n| extend MaliciousURL = tostring(Entities.Url)\n| project MaliciousURL\n| parse-where MaliciousURL with * \"//\" ['Malicious Domain'] \"/\" *\n| summarize Count=count() by ['Malicious Domain']\n| sort by Count desc \n| render barchart  \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6a8ca382-cc25-4fdd-8f7d-041b657b6364')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect SSPR initiated via Microsoft Graph",
                "description": "Detects when a successful self service password reset was triggered from Microsoft Graph. This could be evidence of abuse of Microsoft Graph to reset on premises Active Directory credentials.",
                "body": "//Detects when a self service password reset has been initiated via MS Graph and is successful\r\nAuditLogs\r\n| where OperationName == \"POST UserAuthMethod.ResetPasswordOnPasswordMethods\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, OperationName, Actor, CorrelationId\r\n| join kind=inner\r\n    (AuditLogs\r\n    | where OperationName == \"Reset password (by admin)\"\r\n    | extend Target = tostring(TargetResources[0].userPrincipalName)\r\n    | where Result == \"success\"\r\n    )\r\n    on CorrelationId\r\n| project GraphPostTime=TimeGenerated, PasswordResetTime=TimeGenerated1, Actor, Target",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6b10f96e-3aa7-461f-b2fe-2a382a913058')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find any Azure AD bulk activities",
                "description": "List the bulk activities attempted by your privileged Azure AD users and parse the results\n",
                "body": "AuditLogs\r\n| where OperationName has_all (\"(bulk)\", \"finished\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, Actor, ResultDescription, OperationName\r\n| parse ResultDescription with * \"Total activities count:\" ['Total Activity Count'] \";\" *\r\n| parse ResultDescription with * \"succeeded activities count\" ['Total Succeeded'] \";\" *\r\n| parse ResultDescription with * \"failed activities count\" ['Total Failed']\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    OperationName,\r\n    ['Total Activity Count'],\r\n    ['Total Succeeded'],\r\n    ['Total Failed'] ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6b23ed01-e950-421f-9df2-a8cc26b1b5fb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Office 365 downloads by Azure AD guests",
                "description": "Summarize the total count and the list of files downloaded by guests in your Office 365 tenant",
                "body": "//Summarize the total count and the list of files downloaded by guests in your Office 365 tenant\r\nlet timeframe=7d;\r\nOfficeActivity\r\n| where TimeGenerated > ago(timeframe)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| summarize\r\n    ['Count of Downloads']=count(),\r\n    ['List of Files Downloaded']=make_set(OfficeObjectId)\r\n    by UserId\r\n| sort by ['Count of Downloads'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6bd18d30-8b31-423b-baf3-508f30412ba1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect admin changing authentication phone details",
                "description": "Detects when an admin changes the authentication phone details for another user",
                "body": "//Detects when an admin changes the authentication phone details for another user\r\nAuditLogs\r\n| where OperationName == \"Admin updated security info\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend ['New Phone Number'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[2].newValue)))\r\n| extend ['Old Phone Number'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[2].oldValue)))\r\n| project TimeGenerated, Actor, Target, ['New Phone Number'], ['Old Phone Number']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6ca1b5fe-97bf-422e-bb15-677d9e50218f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when account set to not require password",
                "description": "Detect when an Active Directory account is set to password not required",
                "body": "SecurityEvent\r\n| project TimeGenerated, EventID, TargetAccount, SubjectAccount, UserAccountControl\r\n| where EventID == \"4738\"\r\n| where UserAccountControl has (\"2082\")\r\n| extend Activity = strcat(\"Account set to password not required\")\r\n| project TimeGenerated, Target=TargetAccount, Actor=SubjectAccount, Activity",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6e13c738-5570-4662-9803-46c87114604f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect potential business email compromise",
                "description": "Find senders that are potentially spamming your users for the first time. Useful at detecting business email compromise from partner companies.",
                "body": "//Find senders that are potentially spamming your users for the first time. Useful at detecting business email compromise from partner companies.\r\n//Set a threshold of the same email being received within a 10 minute period\r\n//Microsoft Sentinel query\r\nlet threshold = 500;\r\n//First create a list of sender addresses that have previously sent you bulk email, hopefully this will let us exclude corporate communications and newsletters etc\r\nlet knownbulkemail=\r\n    EmailEvents\r\n    | where TimeGenerated > ago(30d) and TimeGenerated < ago (1d)\r\n    | project TimeGenerated, EmailDirection, DeliveryAction, RecipientEmailAddress, SenderFromAddress, Subject\r\n    | where EmailDirection == \"Inbound\"\r\n    | where DeliveryAction == \"Delivered\"\r\n    | summarize RecipientCount=dcount(RecipientEmailAddress) by SenderFromAddress, Subject, bin(TimeGenerated, 10m)\r\n    | where RecipientCount > threshold\r\n    | distinct SenderFromAddress;\r\n//Look in the last hour for any new senders that have sent over the threshold in a 10 minute period\r\nEmailEvents\r\n| where TimeGenerated > ago(1d)\r\n| project TimeGenerated, EmailDirection, DeliveryAction, RecipientEmailAddress, SenderFromAddress, Subject\r\n| where EmailDirection == \"Inbound\"\r\n| where DeliveryAction == \"Delivered\"\r\n| summarize RecipientCount=dcount(RecipientEmailAddress) by SenderFromAddress, Subject, bin(TimeGenerated, 10m)\r\n| where SenderFromAddress !in (knownbulkemail) and RecipientCount > threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6f68a08b-fe12-44af-888f-abcff52397e3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize ASR activity",
                "description": "Provides a summary of Attack Surface Reduction rules, which ASR rules are being hit and by which processes",
                "body": "//Provides a summary of Attack Surface Reduction rules, which ASR rules are being hit and by which processes\r\nDeviceEvents\r\n| where TimeGenerated > ago(30d)\r\n| where ActionType startswith \"Asr\"\r\n| where isnotempty(InitiatingProcessCommandLine)\r\n| summarize ['ASR Hit Count']=count()by ActionType, InitiatingProcessCommandLine\r\n| sort by ['ASR Hit Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/70696f95-977e-4ff1-91dd-6a5ca9ec6807')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive service principals with privilege",
                "description": "Find any Azure AD service principals that have been granted any .All access in the last year that haven't signed in for 30 days. May include already deleted service principals.\n",
                "body": "//Find any Azure AD service principals that have been granted any .All access in the last year that haven't signed in for 30 days. May include already deleted service principals.\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| where ['Permissions granted'] contains \".All\"\r\n| distinct ServicePrincipalId\r\n| join kind=leftanti (\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | where ResultType == \"0\"\r\n    | distinct ServicePrincipalName, ServicePrincipalId)\r\n    on ServicePrincipalId\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7092d8e1-2da0-4f6b-b0e3-7ec8caaf8c13')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when access is granted to a service principal",
                "description": "Detect when either application or delegated access is granted to a service principal in Azure AD",
                "body": "//Detect when either application or delegated access is granted to a service principal in Azure AD\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | extend Activity = strcat(\"Delegated access added to application\")\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend Activity = strcat(\"Application access added to application\")\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nunion delegatedaccess, appaccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/73193761-072a-4808-97c0-71bbb506996c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect RDP recon",
                "description": "Search for devices connecting to multiple IP addresses via RDP witin a time window and alert when over a particular threshold\n",
                "body": "//Search for devices connecting to multiple IP addresses via RDP witin a time window and alert when over a particular threshold\r\nlet timerange=1d;\r\nlet window=20m;\r\nlet threshold=5;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(timerange)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n// Exclude Defender for Identity which uses RDP to map your network\r\n| where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n| summarize ['Target Device List']=make_set(RemoteIP), ['Count of Devices']=dcount(RemoteIP) by bin(TimeGenerated, window), DeviceName\r\n| where ['Count of Devices'] > threshold\r\n| sort by ['Count of Devices'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/750b743d-4e89-4569-a56f-1ba55e9dd5d0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize incident severity per month",
                "description": "Visualize the severity of your Microsoft Sentinel incidents per month",
                "body": "//Visualize the severity of your Microsoft Sentinel incidents per month\r\nSecurityIncident\r\n| where TimeGenerated > ago(365d)\r\n| summarize Count=dcount(IncidentNumber)by Severity, startofmonth(TimeGenerated)\r\n| render columnchart with (kind=unstacked, title=\"Microsoft Sentinel Incident Severity\", xtitle=\"Month\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/752622b6-d93a-4779-9270-50783745cada')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect certutil public connections",
                "description": "//Detects when certutil is used to connect to a public IP. This could indicate abuse of cert util, see - https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats\n",
                "body": "//Detects when certutil is used to connect to a public IP. This could indicate abuse of cert util, see - https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago (7d)\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIPType,\r\n    LocalIP,\r\n    RemoteIPType,\r\n    RemoteIP,\r\n    RemoteUrl,\r\n    RemotePort\r\n| where InitiatingProcessCommandLine contains \"certutil\"\r\n| where RemoteIPType == \"Public\"",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/75a138a4-6677-4cdb-8ec3-454e36c7e70c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize uploads vs downloads per day",
                "description": "Visualize uploads vs downloads in your Office 365 tenant per day\n",
                "body": "//Visualize uploads vs downloads in your Office 365 tenant per day\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| project TimeGenerated, Operation\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileDownloaded\", \"FileUploaded\")\r\n| summarize\r\n    ['Files Downloaded']=countif(Operation in (\"FileDownloaded\", \"FileSyncDownloadedFull\")),\r\n    ['Files Uploaded']=countif(Operation in (\"FileSyncUploadedFull\", \"FileUploaded\"))\r\n    by startofday(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    title=\"Downloads vs Uploads in Office 365\",\r\n    ytitle=\"Count\",\r\n    xtitle=\"Day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/75b9546b-6b25-4770-9dc1-a810c82359e7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize the most popular domains that have redeemed invites",
                "description": "Visualize the most popular domains that have redeemed invites to your Azure AD tenant over the last 30 days.\n",
                "body": "//Visualize the most popular domains that have redeemed invites to your Azure AD tenant over the last 30 days.\r\nAuditLogs\r\n| where TimeGenerated > ago(30d)\r\n| where OperationName == \"Redeem external user invite\"\r\n| extend GuestEmail = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['User Domain'] = tostring(split(GuestEmail, \"@\")[1])\r\n| where isnotempty(['User Domain'])\r\n| summarize Count=count()by ['User Domain']\r\n| sort by Count desc \r\n| render barchart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/77283f80-e95c-4180-b85a-5ce5c70b6ac4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize types of MFA used",
                "description": "Visualize the MFA types used by your users, i.e text message, mobile app notification, verification code",
                "body": "//Visualize the MFA types used by your users, i.e text message, mobile app notification, verification code\nSigninLogs\n| where TimeGenerated > ago (30d)\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\n| project AuthenticationDetails\n| extend ['MFA Method'] = tostring(parse_json(AuthenticationDetails)[1].authenticationMethod)\n| summarize Count=count()by ['MFA Method']\n| where ['MFA Method'] != \"Previously satisfied\" and isnotempty(['MFA Method'])\n| sort by Count desc\n| render barchart with (title=\"Types of MFA Methods used\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/782a5ecc-4ef5-4a70-bbfe-1f5a88a6f689')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when a guest is added to an Azure AD role",
                "description": "Detects when an Azure AD guest is added to an Azure AD role\n",
                "body": "//Detects when an Azure AD guest is added to an Azure AD role\r\nAuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend RoleAdded = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where Target contains \"#ext#\"\r\n| project TimeGenerated, OperationName, Actor, Target, RoleAdded",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/786175fd-b95b-45c9-a710-51282e0627c9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect service principal new IP address",
                "description": "Detect when an Azure AD service principal signs in from an IP previously not seen",
                "body": "//Detect when an Azure AD service principal signs in from an IP previously not seen\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(180d) and TimeGenerated < ago(7d)\r\n| distinct AppId, IPAddress\r\n| join kind=rightanti\r\n    (\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago(7d)\r\n    | project TimeGenerated, AppId, IPAddress, ResultType, ServicePrincipalName\r\n    )\r\n    on IPAddress\r\n| where ResultType == \"0\"\r\n| distinct ServicePrincipalName, AppId, IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7a42485d-cfa0-47ed-a3d2-8a0e78912603')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect clients querying suspicious domain",
                "description": "When a domain is flagged by Defender for Cloud (Azure Security Center) as suspicious then find any other clients that have queried that domain in DNS events\n",
                "body": "//When a domain is flagged by Defender for Cloud (Azure Security Center) as suspicious then find any other clients that have queried that domain in DNS events\nlet suspiciousurl=\nSecurityAlert\n| where AlertName startswith \"Communication with suspicious random domain name\"\n| mv-expand todynamic(Entities)\n| project Entities\n| extend SuspiciousURL = tostring(Entities.DomainName)\n| where isnotempty(SuspiciousURL)\n| distinct SuspiciousURL;\n    DnsEvents\n    | where QueryType == \"A\"\n    | project Name, ClientIP\n    | where Name in (suspiciousurl)\n| summarize ['Client IPs']=make_set(ClientIP) by Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/808c62cf-c987-4b4d-8e00-9759c60fb08d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize activity from particular country",
                "description": "Summarize sign in activity from a particular country or countries to your tenant over the last week",
                "body": "//Summarize sign in activity from a particular country or countries to your tenant over the last week\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n//Choose a country code, you could do multiples with | where Location in (\"AU\",\"US\")\r\n| where Location == \"RU\"\r\n| extend ['Full Location'] = strcat(LocationDetails.countryOrRegion, '|', LocationDetails.state, '|', LocationDetails.city)\r\n| where ResultType in(successCodes) or ResultType in(failureCodes)\r\n| summarize\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes)))\r\n    by ['Full Location'], IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/827a0d29-a34b-4cfa-a023-a32d89fe7746')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find user agent strings",
                "description": "Parses the user agent into its various components to allow hunting on specific browser versions or patch levels",
                "body": "//Parses the user agent into its various components to allow hunting on specific browser versions or patch levels\r\nSigninLogs\r\n| extend UserAgentDetail = todynamic(parse_user_agent(UserAgent, \"browser\"))\r\n| extend UserAgentFamily = tostring(parse_json(tostring(UserAgentDetail.Browser)).Family)\r\n| extend UserAgentMajorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MajorVersion)\r\n| extend UserAgentMinorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MinorVersion)\r\n| extend UserAgentPatch = toint(parse_json(tostring(UserAgentDetail.Browser)).Patch)\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    AppDisplayName,\r\n    ResultType,\r\n    IPAddress,\r\n    Location,\r\n    UserAgentFamily,\r\n    UserAgentMajorVersion,\r\n    UserAgentMinorVersion,\r\n    UserAgentPatch,\r\n    UserAgent",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/82c3f413-58a2-44b6-bde4-984a5383f661')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect risk event followed by MFA changes",
                "description": "Detects when a user flags an Azure AD risk event followed by changes to their MFA profile - potentially detecting a bad actor changing MFA details\n",
                "body": "// Detects when a user flags an Azure AD risk event followed by changes to their MFA profile - potentially detecting a bad actor changing MFA details\r\n// Timeframe = the minutes between flagging a risk event and MFA details being changed\r\nlet timeframe = 120;\r\n//Search for real time risk events only and retrieve Correlation Id\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (1d)\r\n| where DetectionTimingType == \"realtime\"\r\n| where RiskDetail <> \"aiConfirmedSigninSafe\"\r\n| project CorrelationId\r\n//Join Correlation Id back to sign in data to retrieve the initial sign in time that was flagged for risk\r\n| join kind=inner(\r\nSigninLogs\r\n| where TimeGenerated > ago (1d))\r\non CorrelationId\r\n| summarize ['Risky Signin Time']=min(TimeGenerated) by CorrelationId, UserPrincipalName\r\n//Join risky sign in UserPrincipalName to audit log for MFA events\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (1d)\r\n    | where OperationName in (\"User registered security info\", \"User deleted security info\",\"User registered all required security info\")\r\n    | where Result == \"success\"\r\n    | extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n//Find the latest event in the MFA registration process\r\n    | summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n    | project\r\n        ['MFA Change Time']=TimeGenerated,\r\n        OperationName,\r\n        UserPrincipalName)\r\n    on UserPrincipalName\r\n//Calculate the time between the initial sign in event and the MFA change time\r\n| extend ['Minutes Between Events']=datetime_diff(\"minute\",['MFA Change Time'], ['Risky Signin Time'])\r\n| project-away UserPrincipalName1\r\n| project-reorder ['Risky Signin Time'], ['MFA Change Time'], ['Minutes Between Events'], UserPrincipalName, OperationName, CorrelationId\r\n//Find events where the time between the two events was less than 120 minutes\r\n| where ['Minutes Between Events'] < timeframe",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8302a064-d9a2-4c3b-8fb2-733bca1c96ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device join over time",
                "description": "Visualize the join type (Azure AD joined, Azure AD registered or Hybrid joined) of your MEM/Intune devices per week",
                "body": "//Visualize the join type (Azure AD joined, Azure AD registered or Hybrid joined) of your MEM/Intune devices per week\r\nIntuneDevices\r\n//Gets all data generated in 180 days\r\n| where TimeGenerated > ago(180d) \r\n//Optionally filter only devices have contact to Intune in 30 days\r\n| where todatetime(LastContact) > ago (30d) \r\n| summarize arg_max(TimeGenerated, *) by DeviceName, startofweek(TimeGenerated)\r\n| where OS == \"Windows\"\r\n| summarize JoinSummary=count()by JoinType, startofweek(TimeGenerated)\r\n| where isnotempty(JoinType)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Week\",\r\n    title=\"Device count by join type per week\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8412959d-cc6b-4533-9823-942ed435630f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when an admin grants mailbox access",
                "description": "Detect when an Exchange admin grants full mailbox access to another user",
                "body": "//Detect when an Exchange admin grants full mailbox access to another user\r\nOfficeActivity\r\n| where RecordType == \"ExchangeAdmin\"\r\n| where Operation == \"Add-MailboxPermission\"\r\n| parse-where Parameters with * 'Identity\",\"Value\":\"' TargetMailbox '\"' *\r\n| parse-where Parameters with * 'User\",\"Value\":\"' UserGivenAccess '\"' *\r\n| parse-where Parameters with * 'AccessRights\",\"Value\":\"' AccessRights '\"' *\r\n| project\r\n    TimeGenerated,\r\n    Actor=UserId,\r\n    ['Target Mailbox']=TargetMailbox,\r\n    ['Target Mailbox DisplayName']=OfficeObjectId,\r\n    ['User Granted Access']=UserGivenAccess,\r\n    ['Access Type']=AccessRights\r\n| where Actor != \"NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.Servicehost)\"\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8413bcf8-d1e0-49e6-829c-00c207d98aed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize app usage month by month",
                "description": "Summarize the usage of all your applications from last month to this month. Usage is calculated by distinct users per application.",
                "body": "//Summarize the usage of all your applications from last month to this month. Usage is calculated by distinct users per application.\r\nSigninLogs\r\n| where TimeGenerated > ago(60d)\r\n| where ResultType == \"0\"\r\n| summarize\r\n    ['Last Month Signins']=dcountif(UserPrincipalName, TimeGenerated > ago(60d) and TimeGenerated < ago(30d)),\r\n    ['This Month Signins']=dcountif(UserPrincipalName, TimeGenerated > ago(30d))\r\n    by AppId, AppDisplayName\r\n| extend ['Percentage Change']=(todouble(['This Month Signins']) * 100 / todouble(['Last Month Signins']))\r\n| sort by AppDisplayName asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/853dae80-abdc-4d96-8e55-3fd873cb0589')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize total downloads from each guest domain",
                "description": "Summarize the total count of downloads from Office 365 for each of your guest domains\n",
                "body": "//Summarize the total count of downloads from Office 365 for each of your guest domains\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId,\"#\")[0])\r\n| extend ['Guest Domain'] = tostring(split(['Guest UserPrincipalName'],\"_\")[-1])\r\n| project ['Guest Domain']\r\n| summarize ['Download Count']=count()by ['Guest Domain']\r\n| sort by ['Download Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/856cece4-c975-4b92-a187-2560167caa04')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Visualize most attacked hostname behind WAF",
                "description": "Visualize the most attacked hostname behind an Azure App Gateway/WAF",
                "body": "//Visualize the most attacked hostname behind an Azure App Gateway/WAF\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(30d)\r\n| where ResourceType == \"APPLICATIONGATEWAYS\"\r\n| where isnotempty(ruleId_s)\r\n| summarize ['WAF Hit Count']=count() by hostname_s\r\n| where isnotempty(hostname_s)\r\n| sort by ['WAF Hit Count'] desc\r\n| render barchart with (title=\"Most WAF Hits by Hostname\", xtitle=\"Hostname\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8587e1d0-6a91-4388-9bba-5fcf343ea987')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Detect new tables created",
                "description": "Detect when new tables have been written to in the last week compared to the last 90 days",
                "body": "//Detect when new tables have been written to in the last week compared to the last 90 days\r\nlet existingtables=\r\n    union withsource=_TableName *\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(7d)\r\n    | distinct Type;\r\nlet newtables=\r\n    union withsource=_TableName *\r\n    | where TimeGenerated > ago(7d)\r\n    | summarize ['First Log Received'] = min(TimeGenerated) by Type\r\n    | project Type, ['First Log Received'];\r\nexistingtables\r\n| join kind=rightanti newtables on Type",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/877372ea-6f74-4bdb-9987-f45577410eb5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize application access",
                "description": "Creates a list of your applications and summarizes successful signins by members vs guests separated to total and distinct signins",
                "body": "//Creates a list of your applications and summarizes successful signins by members vs guests separated to total and distinct signins\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| project TimeGenerated, UserType, ResultType, AppDisplayName, UserPrincipalName\r\n| where ResultType == 0\r\n| summarize\r\n    ['Total Member Signins']=countif(UserType == \"Member\"),\r\n    ['Distinct Member Signins']=dcountif(UserPrincipalName, UserType == \"Member\"),\r\n    ['Total Guest Signins']=countif(UserType == \"Guest\"),\r\n    ['Distinct Guest Signins']=dcountif(UserPrincipalName, UserType == \"Guest\")\r\n    by AppDisplayName\r\n| sort by AppDisplayName asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/898b9f6d-d13b-496a-8392-6949034ce47a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize anomalous downloads in Office 365",
                "description": "Use the inbuilt KQL anomaly detection to detect users that have downloaded more files than expected.",
                "body": "//Visualises potentially anomalous download activities in your Office tenant over the set period. Time frames can be adjusted to suit. \r\n//Starttime and timeframe = how many days of data to look at and in what grouping, i.e 7 days of data over 1 hour periods.\r\n//Threshold = the amount of total downloads required to be included in anomaly calculations. Reduces noise from low level anomalies, e.g going from 1 download to 3 downloads total.\r\n//sensitivity = adjust to make the query more or less sensitive, the higher the value, the greater the anomaly required to be detected.\r\nlet starttime = 7d;\r\nlet timeframe = 1h;\r\nlet threshold = 30;\r\nlet sensitivity = 2;\r\nlet operations = dynamic([\"FileSyncDownloadedFull\",\"FileDownloaded\"]);\r\nlet outlierusers=\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation in (['operations'])\r\n| project TimeGenerated, UserId\r\n| order by TimeGenerated\r\n| summarize Events=count()by UserId, bin(TimeGenerated, timeframe)\r\n| where Events > threshold\r\n| summarize EventCount=make_list(Events),TimeGenerated=make_list(TimeGenerated) by UserId\r\n| extend outliers=series_decompose_anomalies(EventCount,sensitivity)\r\n| mv-expand TimeGenerated, EventCount, outliers\r\n| where outliers == 1\r\n//If you don't want to visualize the anomalies then remove everything below this line\r\n| distinct UserId;\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation in (['operations'])\r\n| where UserId in (outlierusers)\r\n| summarize DownloadCount=count()by UserId, bin(TimeGenerated, timeframe)\r\n| render timechart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8cba052e-6186-42a7-9b0a-5d23f2e318ed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find macro files received via email",
                "description": "When a macro is received via email from an external sender, find all users who receieved the same file",
                "body": "//When a macro is received via email from an external sender, find all users who receieved the same file\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    NetworkMessageId\r\n| join kind=inner (EmailAttachmentInfo) on NetworkMessageId\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    FileName\r\n| where FileName endswith \".xlsm\" or FileName endswith \".xstm\"\r\n| summarize Recipient=make_set(RecipientEmailAddress) by FileName, SenderMailFromAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8eaba79b-c503-4868-844a-d08a5ff10614')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize files shared to guests",
                "description": "Visualize the files shared to guests from Office 365 over time",
                "body": "//Visualize the files shared to guests from Office 365 over time\r\nOfficeActivity\r\n| where TimeGenerated > ago(90d)\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#ext#\"\r\n| summarize Count=count()by bin(TimeGenerated, 1d)\r\n| render timechart with (ytitle=\"File Count\", title=\"Files shared with guests over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/90f40f14-1c7f-487f-bd9a-b7fc9a17ba0b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect managed identity accessing new resources",
                "description": "Detect when an Azure AD managed identity accesses a resource for the first time, i.e an identity that previously only accessed storage accesses a key vault\n",
                "body": "AADManagedIdentitySignInLogs\r\n| where TimeGenerated > ago (60d) and TimeGenerated < ago(1d)\r\n| where ResultType == \"0\"\r\n| distinct ServicePrincipalId, ResourceIdentity\r\n| join kind=rightanti (\r\n    AADManagedIdentitySignInLogs\r\n    | where TimeGenerated > ago (1d)\r\n    | where ResultType == \"0\"\r\n    )\r\n    on ServicePrincipalId, ResourceIdentity\r\n| project\r\n    ['Service Principal DisplayName']=ServicePrincipalName,\r\n    ['Service Principal Id']=ServicePrincipalId,\r\n    ['Azure Resource Identity Id']=ResourceIdentity,\r\n    ['Azure Resource DisplayName']=ResourceDisplayName\r\n| distinct\r\n    ['Service Principal DisplayName'],\r\n    ['Service Principal Id'],\r\n    ['Azure Resource DisplayName'],\r\n    ['Azure Resource Identity Id']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/93c261ec-0baa-4be4-b76f-315afea7f959')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize SmartScreen warnings",
                "description": "Visualize the most common domains triggering Microsoft Defender SmartScreen warnings",
                "body": "//Visualize the most common domains triggering Microsoft Defender SmartScreen warnings\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType == \"SmartScreenUrlWarning\"\r\n| parse RemoteUrl with * '://' Domain '/' *\r\n| where isnotempty(Domain)\r\n| summarize Count=count()by Domain\r\n| sort by Count\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/95ea77e6-6637-416d-812a-7f4b2415a1e0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize guest invites sent vs guest invites redeemed",
                "description": "Visualizes the total guest invites sent from your Azure AD tenant vs those redeemed. Data is summarized per week.\n",
                "body": "//Visualizes the total guest invites sent from your Azure AD tenant vs those redeemed. Data is summarized per week.\r\nlet timerange=180d;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName in (\"Redeem external user invite\", \"Invite external user\")\r\n| summarize\r\n    InvitesSent=countif(OperationName == \"Invite external user\"),\r\n    InvitesRedeemed=countif(OperationName == \"Redeem external user invite\")\r\n    by startofweek(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    title=\"Guest Invites Sent v Guest Invites Redeemed\",\r\n    xtitle=\"Invites\",\r\n    kind=unstacked)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/97228d19-802d-4c86-b9f3-e6992806cf64')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect MFA changes from unknown IP",
                "description": "Detect when MFA details for a user are changed, deleted or registered from an IP address that user has never signed in successfully from\n",
                "body": "//Detect when MFA details for a user are changed, deleted or registered from an IP address that user has never signed in successfully from\r\n//Cache all successful sign in data for users using materialize operator\r\nlet signindata=materialize (\r\nSigninLogs\r\n    | where TimeGenerated > ago(180d)\r\n    | where ResultType == 0\r\n    | distinct UserPrincipalName, IPAddress);\r\n//Search for audit events showing MFA registrations, deletions or changes in the last day\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"User registered security info\", \"User deleted security info\", \"User registered all required security info\")\r\n| where Result == \"success\"\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project UserPrincipalName, IPAddress, OperationName\r\n//Join those events back to our summarized sign in data looking for users who register MFA from an IP they have never signed in from\r\n| where isnotempty(IPAddress)\r\n| join kind=leftanti (signindata) on IPAddress, UserPrincipalName\r\n| distinct UserPrincipalName, IPAddress, OperationName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/97782146-135e-432f-b977-718afa595ba8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize all local group additions",
                "description": "Summarize the total count of all local group additions by group name",
                "body": "//Summarize the total count of all local group additions by group name\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType == \"UserAccountAddedToLocalGroup\"\r\n| summarize ['Local Group Addition Count']=count() by ['Local Group Name']=tostring(AdditionalFields.GroupName)\r\n| sort by ['Local Group Addition Count']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9a7fef3d-5565-48cb-b862-681ee58f86c7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect new hash accessing LSASS",
                "description": "Detect when a process with a hash not previously seen before in your environment accesses lsass.exe via an open process API call",
                "body": "//Detect when a process with a hash not previously seen before in your environment accesses lsass.exe via an open process API call\r\nlet knownhashes=\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(30d) and TimeGenerated < ago (1d)\r\n    | where ActionType == \"OpenProcessApiCall\"\r\n    | where FileName == \"lsass.exe\"\r\n    | distinct InitiatingProcessSHA256;\r\nDeviceEvents\r\n| where TimeGenerated > ago (1d)\r\n| where ActionType == \"OpenProcessApiCall\"\r\n| where FileName == \"lsass.exe\"\r\n| where InitiatingProcessSHA256 !in (knownhashes)\r\n| extend DesiredAccess = tostring(AdditionalFields.DesiredAccess)\r\n| distinct\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    DesiredAccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c10ef4d-702f-4fc3-964a-a266470d419b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find guests invited but not redeemed",
                "description": "Lists guests who have been invited but not yet redeemed their invites. Excludes newly invited guests (last 30 days).",
                "body": "//Lists guests who have been invited but not yet redeemed their invites.\r\n//Excludes newly invited guests (last 30 days).\r\nlet timerange=365d;\r\nlet timeframe=30d;\r\nAuditLogs\r\n| where TimeGenerated between (ago(timerange) .. ago(timeframe)) \r\n| where OperationName == \"Invite external user\"\r\n| extend GuestUPN = tolower(tostring(TargetResources[0].userPrincipalName))\r\n| project TimeGenerated, GuestUPN\r\n| join kind=leftanti  (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (timerange)\r\n    | where OperationName == \"Redeem external user invite\"\r\n    | where CorrelationId <> \"00000000-0000-0000-0000-000000000000\"\r\n    | extend d = tolower(tostring(TargetResources[0].displayName))\r\n    | parse d with * \"upn: \" GuestUPN \",\" *\r\n    | project TimeGenerated, GuestUPN)\r\n    on GuestUPN\r\n| distinct GuestUPN",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c21603a-c0d4-463d-9500-9022153283c2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find downloads for top 20 guests",
                "description": "Find the top 20 guests who are downloading files from your tenant and calculate the percentage of total downloads from those users. Useful to see if you have a few guests responsible for most of the downloads in your tenant.\n",
                "body": "//Find the top 20 guests who are downloading files from your tenant and calculate the percentage of total downloads from those users. Useful to see if you have a few guests responsible for most of the downloads in your tenant.\r\n//First find the count of all downloads by guests in your tenant\r\nlet totalguestdownloads=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(30d)\r\n    | where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n    | where UserId contains \"#EXT#\"\r\n    | count\r\n//Extend a fake column we will use to join our two queries\r\n    | extend ['Total Download Count'] = Count, Constant=\"x\";\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n//Extend the same fake column to use to join our two queries\r\n| extend Constant=\"x\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId, \"#\")[0])\r\n//Summarize download count by each guest and join to our first query\r\n| summarize ['Individual Download Count']=count()by ['Guest UserPrincipalName'], Constant\r\n| join kind=fullouter totalguestdownloads on Constant\r\n| project-away Constant, Constant1, Count\r\n| sort by ['Individual Download Count'] desc \r\n//Take the top 20 and then calculate the percentage\r\n| take 20\r\n| extend ['Percentage of Total Downloads']=(todouble(['Individual Download Count']) * 100 / todouble(['Total Download Count']))",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c281d34-c8c8-4b6d-80e4-f9d68e754461')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect PowerShell execution policy change",
                "description": "Detect when a non system account changes the PowerShell execution policy on a device\n",
                "body": "//Detect when a non system account changes the PowerShell execution policy on a device\r\nDeviceEvents\r\n| where ActionType == \"PowerShellCommand\"\r\n| where InitiatingProcessFileName == \"powershell.exe\"\r\n| where InitiatingProcessAccountName != \"system\"\r\n| where AdditionalFields.Command == \"Set-ExecutionPolicy\"\r\n| project TimeGenerated, DeviceName, InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a2174516-916b-4aaf-88a5-604768019a01')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect user added to local admin on device",
                "description": "Detect when an admin adds another user to the local administrators group on a device and optionally query IdentityInfo to return the UPN of the user added\n",
                "body": "DeviceEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"UserAccountAddedToLocalGroup\"\r\n| where AdditionalFields.GroupName == \"Administrators\"\r\n// Exclude processes initiated by system as this detection is for end users adding groups\r\n| where InitiatingProcessAccountSid != \"S-1-5-18\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    AccountSid,\r\n    Actor=InitiatingProcessAccountName\r\n//Join query to IdentityInfo table to match the AccountSid\r\n//if you do not use the IdentityInfo table remove everything below this line\r\n| join kind=inner (\r\n    IdentityInfo\r\n    | where TimeGenerated > ago (21d)\r\n    | summarize arg_max (TimeGenerated, *) by AccountUPN)\r\n    on $left.AccountSid == $right.AccountSID\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    ['User Added']=AccountUPN,\r\n    ['User Added Sid']=AccountSID,\r\n    Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a2e0f768-dac6-4883-8fb0-bc5c5ab547e6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize password vs passwordless signins",
                "description": "Visualize password vs passwordless signins per week",
                "body": "//Visualize password vs passwordless signins per week\r\nSigninLogs\r\n| project TimeGenerated, AuthenticationDetails\r\n| where TimeGenerated > ago (180d)\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| extend AuthMethod = tostring(parse_json(AuthenticationDetails).authenticationMethod)\r\n| where AuthMethod != \"Previously satisfied\"\r\n| summarize\r\n    Password=countif(AuthMethod == \"Password\"),\r\n    Passwordless=countif(AuthMethod in (\"FIDO2 security key\", \"Passwordless phone sign-in\", \"Windows Hello for Business\", \"Mobile app notification\", \"X.509 Certificate\"))\r\n    by startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    xtitle=\"Week\",\r\n    ytitle=\"Signin Count\",\r\n    title=\"Password vs Passwordless signins per week\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a485dcb5-8a86-4197-b9db-fabdea1a90d4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Summarize NTLM authentication",
                "description": "Summarize NTLM authentications by which source computers & accounts are connecting to the most destination devices",
                "body": "//Summarize NTLM authentications by which source computers & accounts are connecting to the most destination devices\r\n//Microsoft Sentinel query\r\nIdentityLogonEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"LogonSuccess\"\r\n| where Protocol == \"Ntlm\"\r\n| where LogonType == \"Credentials validation\"\r\n| summarize ['Target Device List']=make_set(DestinationDeviceName), ['Target Device Count']=dcount(DestinationDeviceName) by DeviceName, AccountName\r\n| sort by ['Target Device Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity",
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a5dbb60c-fd54-4fb6-9528-e678ed16aeaa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA top 20 apps",
                "description": "Summarize the percentage of signins covered by MFA for your top 20 most popular Azure AD apps",
                "body": "//Summarize the percentage of signins covered by MFA for your top 20 most popular Azure AD apps\r\n//First create a list of your top 20 apps by finding distinct user count by application over 30 days\r\nlet top20apps=\r\n    SigninLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | summarize UserCount=dcount(UserPrincipalName)by AppDisplayName\r\n    | sort by UserCount desc \r\n    | take 20\r\n    | project AppDisplayName;\r\n//Use that list to calculate the percentage of signins to those apps that are covered by MFA\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where AppDisplayName in (top20apps)\r\n| summarize TotalCount=count(),\r\n    MFACount=countif(AuthenticationRequirement == \"multiFactorAuthentication\"),\r\n    nonMFACount=countif(AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by AppDisplayName\r\n| project\r\n    AppDisplayName,\r\n    TotalCount,\r\n    MFACount,\r\n    nonMFACount,\r\n    MFAPercentage=(todouble(MFACount) * 100 / todouble(TotalCount))\r\n| sort by MFAPercentage asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a6a90a7a-e19b-4c76-b1c7-b72a4104874c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect on premises password reset for privileged Azure AD users",
                "description": "Detects when a user with a privileged Azure AD role has had their on premises Active Directory password changed by someone other than themselves.",
                "body": "//Detects when a user with a privileged Azure AD role has had their on premise password changed by someone other than themselves\r\nlet timeframe=7d;\r\n//First find any users that hold privileged Azure AD roles\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where isnotempty(AssignedRoles)\r\n| where AssignedRoles != \"[]\"\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| project AccountUPN, AccountName, AccountSID\r\n//Join those users based on AccountSID to on premises Active Directory password reset events\r\n| join kind=inner (\r\n    SecurityEvent\r\n    | where TimeGenerated > ago(timeframe)\r\n    | where EventID == \"4724\"\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        SubjectAccount,\r\n        TargetAccount,\r\n        TargetSid,\r\n        SubjectUserSid\r\n    )\r\n    on $left.AccountSID == $right.TargetSid\r\n| where SubjectUserSid != TargetSid\r\n//Summarize event data to make it easy to read\r\n| project ['Time of Password Reset']=TimeGenerated, Activity, Actor=SubjectAccount, ['Target UserPrincipalName']=AccountUPN,['Target AccountName']=TargetAccount",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a6e857db-f06d-4595-a01c-8ff291053eaa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive apps",
                "description": "Find Azure AD applications that have had no signins for over 30 days. May be a sign of an app no longer in use or users bypassing SSO.",
                "body": "//Find Azure AD applications that have had no signins for over 30 days. May be a sign of an app no longer in use or users bypassing SSO.\r\nSigninLogs\r\n| where TimeGenerated > ago (365d)\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| project\r\n    AppDisplayName,\r\n    ['Last Logon Time']=TimeGenerated,\r\n    ['Days Since Last Logon']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Logon'] > 30",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a710a28d-67bd-4f51-b9f7-0a500fc6132f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect Teamviewer connections",
                "description": "//Detects successful TeamViewer connections from internal to external IP addresses. If TeamViewer is a sanctioned app then you will get lots of hits of course.",
                "body": "//Detects successful TeamViewer connections from internal to external IP addresses\r\n//If TeamViewer is a sanctioned app then you will get lots of hits.\r\nDeviceNetworkEvents\r\n| where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| project TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessFileName,\r\n    LocalIP,\r\n    RemoteIP",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a88c1bf6-1e27-4a59-81fd-d8c1f30d0029')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find when files are shared from OneDrive to guests",
                "description": "Find when files are shared from OneDrive to third party guests\n\n\n",
                "body": "//Find when files are shared from OneDrive to third party guests\r\nOfficeActivity\r\n| where TimeGenerated > ago(7d)\r\n| where OfficeWorkload == \"OneDrive\"\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" and TargetUserOrGroupName contains \"#EXT#\"\r\n| project\r\n    TimeGenerated,\r\n    ['User Who Shared']=UserId,\r\n    ['Guest Granted Access']=TargetUserOrGroupName,\r\n    ['File Shared']=OfficeObjectId\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/abd3ce32-93ff-4f38-8d02-6c88bcfc5225')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize user privilege on devices",
                "description": "Create a summary of each device showing all users who have logged on, separated into normal and local admin logons",
                "body": "//Create a summary of each device showing all users who have logged on, separated into normal and local admin logons\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(30d)\r\n| project DeviceName, ActionType, LogonType, AdditionalFields, InitiatingProcessCommandLine, AccountName, IsLocalAdmin\r\n| where ActionType == \"LogonSuccess\"\r\n| where LogonType == \"Interactive\"\r\n| where AdditionalFields.IsLocalLogon == true\r\n| where InitiatingProcessCommandLine == \"lsass.exe\"\r\n| summarize\r\n    ['Local Admin Count']=dcountif(AccountName,IsLocalAdmin == \"true\"),\r\n    ['Local Admins']=make_set_if(AccountName, IsLocalAdmin == \"true\"), \r\n    ['Standard User Count']=dcountif(AccountName, IsLocalAdmin == \"false\"),\r\n    ['Standard Users']=make_set_if(AccountName, IsLocalAdmin == \"false\")\r\n    by DeviceName\r\n| sort by ['Local Admin Count'] desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/af5d6dbf-81d7-4df5-afad-4faa565ec1df')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize inbound vs outbound guest access",
                "description": "Visualize inbound Azure AD guests (other tenants connecting to your tenant) vs outbound (your users connecting to other tenants)\n",
                "body": "//Visualize inbound Azure AD guests (other tenants connecting to your tenant) vs outbound (your users connecting to other tenants)\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where UserType == \"Guest\"\r\n| where ResultType == 0\r\n| summarize\r\n    ['Inbound Guests']=countif(AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId),\r\n    ['Outbound Guests']=countif(AADTenantId == HomeTenantId and ResourceTenantId != AADTenantId)\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Inbound Guest vs Outbound Guest Access\", ytitle=\"Number of connections\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b01f1269-f3d6-4b42-9a8e-1b1700413109')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Summarize table size changes",
                "description": "Calculate the change in size of all your tables from last week to this week",
                "body": "//Calculate the change in size of all your tables from last week to this week\r\nlet lastweek=\r\nunion withsource=_TableName *\r\n| where TimeGenerated > ago(14d) and TimeGenerated < ago(7d)\r\n| summarize\r\n    Entries = count(), Size = sum(_BilledSize) by Type\r\n| project ['Table Name'] = Type, ['Last Week Table Size'] = Size, ['Last Week Table Entries'] = Entries, ['Last Week Size per Entry'] = 1.0 * Size / Entries\r\n| order by ['Table Name']  desc;\r\nlet thisweek=\r\nunion withsource=_TableName *\r\n| where TimeGenerated > ago(7d)\r\n| summarize\r\n    Entries = count(), Size = sum(_BilledSize) by Type\r\n| project ['Table Name'] = Type, ['This Week Table Size'] = Size, ['This Week Table Entries'] = Entries, ['This Week Size per Entry'] = 1.0 * Size / Entries\r\n| order by ['Table Name']  desc;\r\nlastweek\r\n| join kind=inner thisweek on ['Table Name']\r\n| extend PercentageChange=todouble(['This Week Table Size']) * 100 / todouble(['Last Week Table Size'])\r\n| project ['Table Name'], ['Last Week Table Size'], ['This Week Table Size'], PercentageChange\r\n| sort by PercentageChange desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b4b10adc-0efb-40e2-9f42-8da4dcedeffc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device compliance over time",
                "description": "Visualize device compliance (compliant, non-compliant, managed by Config Manager, not evaluated or in grace period) per week over time\n",
                "body": "//Visualize device compliance (compliant, non-compliant, managed by Config Manager, not evaluated or in grace period) per week over time\r\nIntuneDevices\r\n| where TimeGenerated > ago (180d)\r\n| summarize arg_max(DeviceName, *) by DeviceName, startofweek(TimeGenerated)\r\n| where isnotempty(CompliantState)\r\n| summarize ComplianceCount=count()by CompliantState, startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Week\",\r\n    title=\"Device compliance per week over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b4b117cb-e42d-45dc-aa6f-575b1eda7452')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize identity protection forecast",
                "description": "Forecast the count of Azure AD Identity Protection Events events for the next 14 days based on the previous 30 days",
                "body": "//Forecast the count of Azure AD Identity Protection Events events for the next 14 days based on the previous 30 days\r\nSecurityAlert\r\n| where ProviderName == \"IPC\"\r\n| make-series [\"Azure AD Identity Protection Events\"]=count() on TimeGenerated from ago(30d) to now() + 14d step 1d\r\n| extend [\"Azure AD Identity Protection Events Forecast\"] = series_decompose_forecast(['Azure AD Identity Protection Events'], toint(14d / 1d))\r\n| render timechart ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b6dcb4ef-1c66-41be-ab79-6660c81b712e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time permissions addition",
                "description": "Detect when a user adds delegated or application permissions to an Azure AD app for the first time. Then retrieve the permissions added.\n",
                "body": "//Detect when a user adds delegated or application permissions to an Azure AD app for the first time.\r\n//Look back in the last year to find all users who have added access to an app\r\nlet newusers=\r\nAuditLogs\r\n| where TimeGenerated > ago(365d) and TimeGenerated < ago(1d)\r\n| where OperationName in (\"Add app role assignment to service principal\",\"Add delegated permission grant\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| distinct Actor\r\n//Find users who add access to an app for the first time in the last day\r\n| join kind=rightanti (\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"Add app role assignment to service principal\",\"Add delegated permission grant\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| distinct Actor )\r\non Actor;\r\n//Retrieve the list of permissions granted by the first time users\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where Actor in (newusers)\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | extend Activity = strcat(\"Delegated access added to application\")\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where Actor in (newusers)\r\n    | extend Activity = strcat(\"Application access added to application\")\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nunion delegatedaccess, appaccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b73ddf2d-b317-4238-9c6b-bdb22dd382f2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect attempts to tamper with MDE registry settings",
                "description": "Detect when a user or process attempts to tamper with Defender for Endpoint registry settings",
                "body": "//Detect when a user or process attempts to tamper with Defender for Endpoint registry settings\r\nDeviceEvents\r\n| where ActionType == \"TamperingAttempt\"\r\n| extend OriginalRegistryValue = tostring(AdditionalFields.OriginalValue)\r\n| extend Status = tostring(AdditionalFields.Status)\r\n| extend TamperingAction = tostring(AdditionalFields.TamperingAction)\r\n| extend AttemptedRegistryValue = tostring(AdditionalFields.TamperingAttemptedValue)\r\n| extend TargetRegistryKey = tostring(AdditionalFields.Target)\r\n| where TamperingAction == \"RegistryModification\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    TamperingAction,\r\n    Status,\r\n    OriginalRegistryValue,\r\n    AttemptedRegistryValue,\r\n    TargetRegistryKey,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b768c320-4dee-4c97-9a4b-8e186f028f77')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize Azure AD guest accounts by last sign in",
                "description": "Group your Azure AD guest accounts into the month they last signed in",
                "body": "//Group your Azure AD guest accounts into the month they last signed in\r\nSigninLogs\r\n| where TimeGenerated > ago (360d)\r\n| where UserType == \"Guest\" or UserPrincipalName contains \"#ext#\"\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n| project TimeGenerated, UserPrincipalName\r\n| summarize ['Inactive Guest Accounts']=make_set(UserPrincipalName) by Month=startofmonth(TimeGenerated)\r\n| sort by Month desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c016805f-d022-4d76-8d37-1acb24ff47de')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find time between upload and malware detection",
                "description": "Calculate the time Office 365 took to detect malware after the file was uploaded\n",
                "body": "//Calculate the time Office 365 took to detect malware after the file was uploaded\r\n//First find the malware detection event\r\nOfficeActivity\r\n| where TimeGenerated > ago(60d)\r\n| where Operation == \"FileMalwareDetected\"\r\n| project\r\n    DetectionTime=TimeGenerated,\r\n    OfficeWorkload,\r\n    ['File Name']=SourceFileName,\r\n    ['File Location']=OfficeObjectId\r\n//Then join back to the upload event on the same file location\r\n| join kind=inner \r\n    (\r\n    OfficeActivity\r\n    | where TimeGenerated > ago (60d)\r\n    | where Operation in (\"FileUploaded\", \"FileSyncUploadedFull\")\r\n    | project\r\n        UploadTime=TimeGenerated,\r\n        OfficeWorkload,\r\n        ['File Name']=SourceFileName,\r\n        ['File Location']=OfficeObjectId,\r\n        ['Relative File URL']=SourceRelativeUrl\r\n    | summarize min(UploadTime) by ['File Location'], UploadTime\r\n    )\r\n    on ['File Location']\r\n//Calculate the time difference between upload and malware detection\r\n| project\r\n    ['File Name'],\r\n    UploadTime,\r\n    DetectionTime,\r\n    ['Time Difference in Minutes']=datetime_diff(\"minute\", DetectionTime, UploadTime),\r\n    ['File Location']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c3a67dd0-8e48-4caf-bd7a-fae2be68d832')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find PowerShell run by users connecting to the internet",
                "description": "Find users that are connecting to internet endpoints via PowerShell commands",
                "body": "//Find users that are connecting to internet endpoints via PowerShell commands\nDeviceNetworkEvents\n| project\n    TimeGenerated,\n    InitiatingProcessAccountName,\n    InitiatingProcessCommandLine,\n    DeviceName,\n    LocalIPType,\n    LocalIP,\n    RemoteIPType,\n    RemotePort,\n    RemoteIP,\n    RemoteUrl\n//Exclude system processes\n| where InitiatingProcessAccountName != \"system\"\n| where InitiatingProcessCommandLine contains \"powershell\"\n| where LocalIPType == \"Private\"\n| where RemoteIPType == \"Public\"\n| project\n    TimeGenerated,\n    DeviceName,\n    InitiatingProcessAccountName,\n    InitiatingProcessCommandLine,\n    LocalIP,\n    RemoteIP,\n    RemotePort,\n    RemoteUrl\n//Exclude system initiated events as this is a user detection\n| where InitiatingProcessAccountName <> \"local service\"\n| sort by TimeGenerated desc \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c5be1eb9-7c5c-493c-a818-202d07c14583')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when 'log on to' list changes",
                "description": "Detect when the 'Log on to' device list is changed for a user",
                "body": "//Alert when the 'Log on to' device list is changed for a user\r\nSecurityEvent\r\n| where EventID == 4738\r\n| where AccountType == \"User\"\r\n//Include domain accounts only (excluding local accounts)\r\n| where TargetDomainName == SubjectDomainName\r\n| extend ['Allowed Devices'] = case(isnotempty(UserWorkstations) and UserWorkstations != \"-\" and UserWorkstations != \"%%1793\", split(UserWorkstations, \",\"),\r\n    (isnotempty(UserWorkstations) and UserWorkstations == \"%%1793\"), strcat(\"User can log onto all devices\"),\r\n    \"unknown\")\r\n//Exclude other 4738 events where the device list isn't changed\r\n| where ['Allowed Devices'] != \"unknown\"\r\n| project TimeGenerated, Actor=SubjectAccount, User=TargetAccount, ['Allowed Devices']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c80e2092-d333-4082-b6c0-05d4a6c579a6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find malicious file hash from email",
                "description": "When Defender for Office 365 removes a malicious file from an email track down all device events with the same file hash",
                "body": "let filehashes=\nSecurityAlert\n| where TimeGenerated > ago (30d)\n| where ProviderName == \"OATP\"\n| where AlertName == \"Email messages containing malicious file removed after delivery​\"\n| mv-expand todynamic(Entities)\n| extend Files = Entities.Files\n| project Files\n| mv-expand Files\n| extend FileHashes = Files.FileHashes\n| mv-expand FileHashes\n| extend FileHash = tolower(tostring(FileHashes.Value))\n| where isnotempty( FileHash)\n| distinct FileHash;\nDeviceFileEvents\n    | where TimeGenerated > ago(30d)\n    | project\n        TimeGenerated,\n        ActionType,\n        FileName,\n        DeviceName,\n        SHA256,\n        InitiatingProcessAccountUpn \n| where SHA256 in (filehashes)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c8ccba7e-26b7-4234-9f8c-1a2f7abc84b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when malware uploaded to Office 365",
                "description": "Alerts when a file believed to be malware is uploaded to your Office 365 tenant in SharePoint or OneDrive\n",
                "body": "//Alerts when a file believed to be malware is uploaded to your Office 365 tenant in SharePoint or OneDrive\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation == \"FileMalwareDetected\"\r\n| project\r\n    TimeGenerated,\r\n    OfficeWorkload,\r\n    ['File Name']=SourceFileName,\r\n    ['File Location']=OfficeObjectId,\r\n    ['Relative File URL']=SourceRelativeUrl,\r\n    ClientIP",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cc91ac95-addd-488b-a29a-a048a0fe15d0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize macro usage",
                "description": "Summarize macro usage on your devies by creating a list all macros used, a count of how many users are using each one and the usernames",
                "body": "union DeviceFileEvents, DeviceNetworkEvents\r\n| where TimeGenerated > ago(30d)\r\n| project InitiatingProcessCommandLine, InitiatingProcessAccountName\r\n| where InitiatingProcessCommandLine startswith '\"EXCEL.EXE'  \r\n| where InitiatingProcessCommandLine endswith '.xltm\"' or InitiatingProcessCommandLine endswith '.xlsm\"'\r\n//Retrieve distinct values for process, hash and account\r\n| distinct InitiatingProcessCommandLine, InitiatingProcessAccountName\r\n//Parse the file path and file name from the process\r\n| parse-where InitiatingProcessCommandLine with * '\"EXCEL.EXE\" \"' ['Macro Filename'] '\"' *\r\n//Summarize the list of macro files by which users have used them\r\n| summarize ['List of Users']=make_set(InitiatingProcessAccountName), ['Count of Users']=dcount(InitiatingProcessAccountName) by ['Macro Filename']\r\n| sort by ['Count of Users'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ccff2cb3-5432-4f88-8078-b5fd9f3e7592')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize most blocked domains",
                "description": "Visualize the most blocked domains sending email inbound to your users",
                "body": "//Visualize the most blocked domains sending email inbound to your users\r\nEmailEvents\r\n| where TimeGenerated > ago (7d)\r\n| where EmailDirection == \"Inbound\"\r\n| where DeliveryAction == \"Blocked\"\r\n| extend Domain = tostring(split(SenderMailFromAddress, \"@\")[-1])\r\n| summarize BlockedCount=count()by Domain\r\n| where isnotempty(Domain)\r\n| sort by BlockedCount desc\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cdfece30-6b7a-426e-8e7c-09d591c3b90b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principal IP addresses",
                "description": "Make a set of IP addresses that your Azure AD service principals have signed in from\n",
                "body": "//Make a set of IP addresses that your Azure AD service principals have signed in from\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(90d)\r\n| where ResultType == \"0\"\r\n| summarize ['List of IP Addresses']=make_set(IPAddress), ['Count of Unique IP Addresses']=dcount(IPAddress) by ServicePrincipalName, AppId\r\n| sort by ['Count of Unique IP Addresses'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ce08ce03-31d1-4828-8e78-1cb495d49f9b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect potential DNS tunnelling",
                "description": "Identifies potential DNS tunnelling over HTTPS ",
                "body": "//Identifies potential DNS tunnelling over HTTPS \r\nDeviceNetworkEvents\r\n| where ActionType == \"NetworkSignatureInspected\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend NetworkSignature = AF.SignatureName\r\n//Search for network signatures that are DNS but not on regular DNS ports including Netbios & LLMNR if those are in use\r\n| where NetworkSignature == \"DNS_Request\" and RemotePort !in (\"53\", \"137\", \"5353\", \"5355\")\r\n//Exclude traffic where the remote IP is a private/local IP address, you can remove this if also interested in that traffic\r\n| where not(ipv4_is_private(RemoteIP))\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    NetworkSignature,\r\n    LocalIP,\r\n    LocalPort,\r\n    RemoteIP,\r\n    RemotePort,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cf2c5007-d863-46f1-a942-226962aaf68e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Heartbeat - Visualize distinct computers sending data per month",
                "description": "Visualize distinct computers per month sending data",
                "body": "//Visualize distinct computers per month sending data\r\nHeartbeat\r\n| where TimeGenerated > ago(365d)\r\n| summarize Count=dcount(Computer)by Month=startofmonth(TimeGenerated)\r\n| render columnchart with (title=\"Distinct monthly computers sending data to Microsoft Sentinel\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cf95fc4b-83e5-4bb8-bf47-2514970a38b8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive PIM users",
                "description": "Find users who have not elevated any roles in Azure AD PIM in 30 days",
                "body": "//Find users who have not elevated any roles in Azure AD PIM in 30 days\r\nAuditLogs\r\n| where TimeGenerated > ago (365d)\r\n| project TimeGenerated, OperationName, Result, TargetResources, InitiatedBy\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| where Result == \"success\"\r\n| extend ['Last Role Activated'] = tostring(TargetResources[0].displayName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| summarize arg_max(TimeGenerated, *) by Actor\r\n| project\r\n    Actor,\r\n    ['Last Role Activated'],\r\n    ['Last Activation Time']=TimeGenerated,\r\n    ['Days Since Last Activation']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Activation'] >= 30\r\n| sort by ['Days Since Last Activation'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cfeb74fa-a151-4121-9d59-f50c8143cc85')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect guest added to multiple Teams quickly",
                "description": "Detect when a guest is added to multiple Teams in a short time frame.",
                "body": "//Detect when a guest is added to multiple Teams in a short time frame.\r\n//Define a time period to check and the threshold of how many Teams to alert on.\r\nlet timeframe=15m;\r\nlet threshold=2;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| summarize\r\n    ['Number of Teams Guest Added To']=dcount(TeamName), ['Team Names']=make_set(TeamName) by UserAdded, bin(TimeGenerated, timeframe)\r\n| where ['Number of Teams Guest Added To'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d03db450-12b9-45a4-967e-01533d35d295')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize spam percentage",
                "description": "Visualize how much is email is being blocked as a percentage of total email over time",
                "body": "//Visualize how much is email is being blocked as a percentage of total email over time\r\nEmailEvents\r\n| where TimeGenerated > ago (30d)\r\n| where EmailDirection == \"Inbound\"\r\n| summarize\r\n    TotalCount=count(),\r\n    BlockedCount=countif(DeliveryAction in (\"Blocked\", \"Junked\"))\r\n    by bin(TimeGenerated, 6h)\r\n| extend Percentage=(todouble(BlockedCount) * 100 / todouble(TotalCount))\r\n| project-away TotalCount, BlockedCount\r\n| render timechart with (title=\"Percentage of email blocked over time\", ymax=100)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d0ab0e39-7800-468f-ac0f-db5571b0c86e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find CA policies with no hits",
                "description": "Find Azure AD conditional access policies that have no hits for 'success' or 'failure' over the last month. Check these policies are configured correctly and still in use.",
                "body": "//Find Azure AD conditional access policies that have no hits for 'success' or 'failure' over the last month\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, ConditionalAccessPolicies\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend ['Conditional Access Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\r\n| summarize ['Conditional Access Result']=make_set(CAResult) by ['Conditional Access Policy Name']\r\n| where ['Conditional Access Result'] !has \"success\"\r\n    and ['Conditional Access Result'] !has \"failure\"\r\n    and ['Conditional Access Result'] !has \"unknownFutureValue\"\r\n| sort by ['Conditional Access Policy Name'] asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d388ed1f-cbfe-4307-92d4-37cccfe141a0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find new Azure AD audit operations",
                "description": "Find any new operations generated in the Azure AD audit table in the last week compared to the last 90 days",
                "body": "//Find any new operations generated in the Azure AD audit table in the last week compared to the last 90 days\r\nlet existingoperations=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(7d)\r\n    | distinct OperationName;\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n| summarize Count=count() by OperationName, Category\r\n| where OperationName !in (existingoperations)\r\n| sort by Count desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d461ee6c-de71-4eb8-a282-3fd0e2275d6f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Find Azure Bastion usage",
                "description": "Find which users have attempted to connect to virtual machines using RDP or SSH in Azure Bastion",
                "body": "//Find which users have attempted to connect to virtual machines using RDP or SSH in Azure Bastion\r\nMicrosoftAzureBastionAuditLogs\r\n| parse TargetResourceId with * 'VIRTUALMACHINES/' ['Virtual Machine Name']\r\n| project\r\n    TimeGenerated,\r\n    Message,\r\n    UserName,\r\n    Protocol,\r\n    ['Virtual Machine Name'],\r\n    ['Virtual Machine IP']=TargetVMIPAddress\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d972079f-e794-415e-bef0-234615d7d56a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when group policy inheritance changed",
                "description": "Detect when group policy inheritance is either allowed or blocked",
                "body": "//Detect when group policy inheritance is either allowed or blocked\r\nSecurityEvent\r\n| project TimeGenerated, EventID, EventData, SubjectAccount\r\n| where EventID == \"5136\"\r\n| parse EventData with * 'ObjectDN\">' OU '</Data' *\r\n| parse EventData with * 'AttributeLDAPDisplayName\">' LDAPAttribute '</Data' *\r\n| parse EventData with * 'AttributeValue\">' AttributeValue '</Data' *\r\n| parse EventData with * 'OperationType\">%%' OperationType '</Data' *\r\n| project\r\n    TimeGenerated,\r\n    Actor=SubjectAccount,\r\n    OU,\r\n    LDAPAttribute,\r\n    AttributeValue,\r\n    OperationType\r\n| where LDAPAttribute == \"gPOptions\"\r\n| where AttributeValue == \"1\"\r\n| extend Activity = case\r\n(OperationType == \"14674\" and AttributeValue == \"1\", strcat(\"Group Policy Inheritance Blocked\"),\r\n OperationType == \"14675\" and AttributeValue == \"1\", strcat(\"Group Policy Inheritance Allowed\"),\r\n \"Unknown\")\r\n| project TimeGenerated, Actor, OU, Activity\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/da73fe80-2cb7-4108-8e81-656817864804')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize all local accounts with admin privilege",
                "description": "Summarize all local user accounts (non-domain) per device which have logged on with administrative rights\n",
                "body": "//Summarize all local user accounts (non-domain) per device which have logged on with administrative rights\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(7d)\r\n| project\r\n    TimeGenerated,\r\n    AdditionalFields,\r\n    IsLocalAdmin,\r\n    LogonType,\r\n    DeviceName,\r\n    AccountDomain,\r\n    AccountName\r\n| extend LocalLogon = toboolean(AdditionalFields.IsLocalLogon)\r\n| where LocalLogon == true\r\n| where IsLocalAdmin == true\r\n| where LogonType == \"Interactive\"\r\n| distinct AccountDomain, AccountName, DeviceName\r\n//Split domain from device name to match for local logons\r\n| extend Device = split(DeviceName, \".\")[0]\r\n| where Device == AccountDomain\r\n| summarize ['Local Accounts with Admin']=make_set(AccountName), ['Count of Admin Accounts']=dcount(AccountName) by DeviceName\r\n| sort by ['Count of Admin Accounts'] desc   ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/de70d975-5f71-4685-b976-904bc133b424')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when named locations are changed",
                "description": "Detect when Azure AD Named Locations are changed (either IP or Country) and retrieve the current list \n",
                "body": "//Detect when Azure AD Named Locations are changed (either IP or Country) and retrieve the current list \r\nlet updatedip=\r\n    AuditLogs\r\n    | where OperationName == \"Update named location\"\r\n    | mv-expand TargetResources\r\n    | extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n    | mv-expand modifiedProperties  \r\n    | extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n    | mv-expand todynamic(newValue)\r\n    | extend ipRanges = tostring(parse_json(newValue).ipRanges)\r\n    | mv-expand todynamic(ipRanges) \r\n    | extend cidr = tostring(ipRanges.cidrAddress)\r\n    | where isnotempty(cidr)\r\n    | extend ['Named Location name'] = tostring(TargetResources.displayName)\r\n    | summarize ['IP List']=make_list(cidr) by ['Named Location name'];\r\nlet updatedcountries=\r\n    AuditLogs\r\n    | where OperationName == \"Update named location\"\r\n    | mv-expand TargetResources\r\n    | extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n    | mv-expand modifiedProperties  \r\n    | extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n    | extend countriesAndRegions = tostring(parse_json(newValue).countriesAndRegions)\r\n    | mv-expand todynamic(countriesAndRegions) \r\n    | where isnotempty(countriesAndRegions)\r\n    | extend ['Named Location name'] = tostring(TargetResources.displayName)\r\n    | summarize ['Country List']=make_list(countriesAndRegions) by ['Named Location name'];\r\nunion updatedip, updatedcountries",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e05fc5d7-1f30-421b-a422-77caaddf0022')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect conditional access failure anomalies",
                "description": "Detect anomalies in the amount of conditional access failures by users in your tenant, then optionally visualize those conditional access failures",
                "body": "//Detect anomalies in the amount of conditional access failures by users in your tenant, then visualize those conditional access failures\r\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\r\nlet startdate=21d;\r\nlet enddate=1d;\r\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\r\nlet timeframe=1h;\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity=2;\r\n//Threshold = set this to tune out low count anomalies, i.e when total failures for a user doubles from 1 to 2\r\nlet threshold=5;\r\nlet outlierusers=\r\nSigninLogs\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where ResultType == \"53003\"\r\n| project TimeGenerated, ResultType, UserPrincipalName\r\n| make-series CAFailureCount=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserPrincipalName \r\n| extend outliers=series_decompose_anomalies(CAFailureCount, sensitivity)\r\n| mv-expand TimeGenerated, CAFailureCount, outliers\r\n| where outliers == 1 and CAFailureCount > threshold\r\n| distinct UserPrincipalName;\r\n//Optionally visualize the anomalies\r\nSigninLogs\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where ResultType == \"53003\"\r\n| project TimeGenerated, ResultType, UserPrincipalName\r\n| where UserPrincipalName in (outlierusers)\r\n| summarize CAFailures=count()by UserPrincipalName, bin(TimeGenerated, timeframe)\r\n| render timechart with (ytitle=\"Failure Count\",title=\"Anomalous Conditional Access Failures\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e3927065-f144-4dfa-9669-ddd201303418')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principals by last sign in",
                "description": "Summarize your Azure AD service principals by the last time they signed in, grouped by month",
                "body": "//Summarize your Azure AD service principals by the last time they signed in, grouped by month\r\nAADServicePrincipalSignInLogs\r\n| project TimeGenerated, AppId, ResultType, ServicePrincipalName\r\n| where TimeGenerated > ago (360d)\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| summarize ['Application List']=make_set(ServicePrincipalName) by Month=startofmonth(TimeGenerated)\r\n| sort by Month asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e5eac7a4-552e-4ea9-bfde-cd10cf8d27b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize total guests vs added to Teams",
                "description": "Visualize total guests redeemed in Azure AD vs guests that have been added to a Team",
                "body": "//Visualize total guests redeemed in Azure AD vs guests that have been added to a Team\r\nlet guestsredeemed=\r\n    AuditLogs\r\n    | where TimeGenerated > ago (90d)\r\n    | where OperationName == \"Redeem external user invite\"\r\n    | extend GuestRedeemed = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend Activity = strcat(\"Guest Invite Redeemed\")\r\n    | project TimeGenerated, GuestRedeemed, Activity;\r\nlet guestsaddedtoteams=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(90d)\r\n    | where Operation == \"MemberAdded\"\r\n    | mv-expand Members\r\n    | extend GuestAdded = tostring(Members.UPN)\r\n    | where GuestAdded contains \"#EXT#\"\r\n    | extend Activity = strcat(\"Guest Added to Team\")\r\n    | project TimeGenerated, GuestAdded, Activity;\r\nunion guestsredeemed, guestsaddedtoteams\r\n| summarize ['Total Count']=count() by Activity, bin(TimeGenerated, 1d)\r\n| render columnchart with (kind=unstacked, title=\"Total Guests Redeemed vs Guests Added to Teams\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e87e32b5-fdbe-4f9c-95a5-00084cf956a5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principal resource access",
                "description": "Create a summary of which resources each of your service principals are connecting to. The higher the count the potential higher blast radius.",
                "body": "//Create a summary of which resources each of your service principals are connecting to. The higher the count the potential higher blast radius.\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == \"0\"\r\n| summarize\r\n    ['List of Azure Resources']=make_set(ResourceDisplayName),\r\n    ['Count of Azure Resources']=dcount(ResourceDisplayName)\r\n    by ServicePrincipalName\r\n| sort by ['Count of Azure Resources'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e9ebbd67-c961-4bb3-adf1-3752d50f61ab')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect when device encryption changed",
                "description": "Detect when the encryption types on a device are changed and parse the previous and current encryption types.\n",
                "body": "//Detect when the encryption types on a device are changed and parse the previous and current encryption types.\r\nIdentityDirectoryEvents\r\n| where ActionType == \"Account Supported Encryption Types changed\"\r\n| parse AdditionalFields with * 'FROM AccountSupportedEncryptionTypes\":\"' PreviousEncryption '\"' *\r\n| parse AdditionalFields with * 'TO AccountSupportedEncryptionTypes\":\"' CurrentEncryption '\"' *\r\n| project TimeGenerated, TargetDeviceName, PreviousEncryption, CurrentEncryption",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/eaa4bc3a-7cc2-41e3-a353-81406e92a3fa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect custom security attribute set",
                "description": "Detect when a custom security attribute is set on a user",
                "body": "//Detect when a custom security attribute is set on a user\r\nAuditLogs\r\n| where OperationName == \"Update attribute values assigned to a user\"\r\n| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)\r\n| extend [\"Attribute Value\"] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| parse x with * '.' ['Attribute Set Name'] \"_\" *\r\n| extend [\"Attribute Name\"]=split(x, \"_\")[1]\r\n| project\r\n    TimeGenerated,\r\n    OperationName,\r\n    Target,\r\n    ['Attribute Set Name'],\r\n    ['Attribute Name'],\r\n    ['Attribute Value'],\r\n    Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/eb470d48-3184-49ed-bdaa-f06c10d2b2ec')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect label downgrade followed by email",
                "description": "Detects when a user downgrades a label on a file and that file is then emailed outbound",
                "body": "// Detects when a user downgrades a label on a file and that file is then emailed outbound \r\n// Starttime = the amount of data to look back on\r\n// Timeframe = the time between the label downgrade and email event\r\nlet starttime=7d;\r\nlet timeframe=4h;\r\nInformationProtectionEvents\r\n| where Time > ago(starttime)\r\n| where Activity == \"DowngradeLabel\"\r\n| project LabelChangeTime=Time, User, FileName=ItemName\r\n| join kind=inner(\r\n    EmailEvents\r\n    | where EmailDirection == \"Outbound\"\r\n    | project\r\n        TimeGenerated,\r\n        SenderMailFromAddress,\r\n        RecipientEmailAddress,\r\n        EmailDirection,\r\n        NetworkMessageId\r\n    | join kind=inner (EmailAttachmentInfo) on NetworkMessageId\r\n    | project\r\n        TimeGenerated,\r\n        SenderMailFromAddress,\r\n        RecipientEmailAddress,\r\n        EmailDirection,\r\n        FileName\r\n    )\r\n    on FileName\r\n| project\r\n    LabelChangeTime,\r\n    EmailSendTime=TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    FileName\r\n| where (EmailSendTime - LabelChangeTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Information Protection",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ebad4988-ce12-4232-84e2-0c658b9f0ad0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize OS Build versions per month",
                "description": "Visualize the OS build numbers of your Windows 10 and 11 devices per month over the last year",
                "body": "//Visualize the OS build numbers of your Windows 10 and 11 devices per month over the last year\r\nDeviceInfo\r\n| where TimeGenerated > ago(365d)\r\n| where OSPlatform in (\"Windows10\", \"Windows11\")\r\n| extend OSBuildNumber=tostring(OSBuild)\r\n| summarize arg_max(TimeGenerated, *) by DeviceName, startofmonth(TimeGenerated)\r\n| summarize count()by OSBuildNumber, startofmonth(TimeGenerated)\r\n| where isnotempty(OSBuildNumber)\r\n| render areachart \r\n    with (\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Month\",\r\n    title=\"Count of Windows 10 and 11 OS Builds per month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ecad0d95-651d-4287-9fc3-46b35ae9ee7f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize outbound guest activity",
                "description": "//Summarize outbound (your users connecting to other tenants) activity by listing the users and which applications they are accessing in each remote tenant",
                "body": "//Summarize outbound (your users connecting to other tenants) activity by listing the users and which applications they are accessing in each remote tenant\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where UserType == \"Guest\"\r\n| where AADTenantId == HomeTenantId\r\n| where ResourceTenantId != AADTenantId\r\n| summarize\r\n    ['Count of Applications']=dcount(AppDisplayName),\r\n    ['List of Applications']=make_set(AppDisplayName),\r\n    ['Count of Users']=dcount(UserPrincipalName),\r\n    ['List of Users']=make_set(UserPrincipalName)\r\n    by ResourceTenantId\r\n| sort by ['Count of Users'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ed93819b-21c2-4a5e-adf9-9904483499f2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect service principal created by managed identity",
                "description": "Detect when an Azure AD service principal is created for a managed identity",
                "body": "AuditLogs\r\n| where OperationName == \"Add service principal\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.app)).displayName)\r\n| extend ['Service Principal DisplayName'] = tostring(TargetResources[0].displayName)\r\n| extend ['Service Principal Id'] = tostring(TargetResources[0].id)\r\n| where Actor == \"Managed Service Identity\"\r\n| project TimeGenerated, ['Service Principal DisplayName'], ['Service Principal Id']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ee5c7ca2-3c78-4ac7-9768-3d12edb24173')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect Azure AD role added to service principal",
                "description": "Detects when an Azure AD role such as Application Admin is added to a Azure AD Service Principal. These should be reviewed as part of least privilege checks.",
                "body": "AuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| where TargetResources[0].type == \"ServicePrincipal\"\r\n| extend ['Service Principal Object Id'] = tostring(TargetResources[0].id)\r\n| extend ['Application Display Name'] = tostring(TargetResources[0].displayName) \r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Added'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    ['Azure AD Role Added'],\r\n    ['Service Principal Object Id'],\r\n    ['Application Display Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ee7a1ae8-e576-41d5-ac48-cc57cbd27d3b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize managed identity resource access",
                "description": "Summarize the Azure resources that each of your managed identities are accessing. The higher the count the higher the potential blast radius.",
                "body": "//Summarize the Azure resources that each of your managed identities are accessing. The higher the count the higher the potential blast radius.\r\nAADManagedIdentitySignInLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| summarize\r\n    ['List of Azure Resources Accessed']=make_set(ResourceDisplayName),\r\n    ['Distinct Resources Accessed']=dcount(ResourceDisplayName)\r\n    by ServicePrincipalName\r\n| sort by ['Distinct Resources Accessed'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ef922f68-93a7-474c-81c9-9d7bd0071de4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize daily group additions",
                "description": "Create a daily report of users being added to on premise Active Directory groups, summarized by group name\n",
                "body": "//Create a daily report of users being added to on premise Active Directory groups, summarized by group name\r\nSecurityEvent\r\n| where TimeGenerated > ago (7d)\r\n| where AccountType == \"User\"\r\n| where EventID in (4728, 4732, 4756, 4761, 4746, 4751)\r\n| project TimeGenerated, MemberName, ['Group Name']=TargetUserName, EventID\r\n| parse MemberName with * 'CN=' UserAdded ',' *\r\n| summarize UsersAdded=make_set(UserAdded) by ['Group Name'], startofday(TimeGenerated)\r\n| sort by ['Group Name'] asc, TimeGenerated desc \r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/efb1faa5-c733-46c7-ba83-49a50c2bc636')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find new ASR events",
                "description": "Retrieve any new ASR alerts in your environment over the last week not previously seen in the prior 90 days and which devices have triggered them",
                "body": "//Retrieve any new ASR alerts in your environment over the last week not previously seen in the prior 90 days and which devices have triggered them\r\nlet timerange=90d;\r\nlet existingalerts=\r\nDeviceEvents\r\n| where TimeGenerated > ago (timerange) and TimeGenerated < ago(7d)\r\n| where ActionType startswith \"Asr\"\r\n| distinct ActionType;\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(7d)\r\n    | where ActionType startswith \"Asr\"\r\n    | where ActionType !in (existingalerts)\r\n| summarize ['Device List']=make_set(DeviceName) by ActionType",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f0656247-8996-493d-a75d-32618bc8664c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize single factor authentication to Azure",
                "description": "Find any single factor sign ins to Azure resources such as the Azure portal",
                "body": "//Find any single factor sign ins to Azure resources such as the Azure portal\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n| where AppDisplayName has \"Azure\"\r\n| where ResultType == 0\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize ['Single Factor Authentications']=make_set(UserPrincipalName) by AppDisplayName\r\n| extend ['User Count'] = array_length(['Single Factor Authentications'])\r\n| order by ['User Count'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f19aed5a-79d8-403d-a015-d9cb91c63887')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize ASR events with trend",
                "description": "Visualize your total attack surface reduction rule events over time with trend",
                "body": "//Visualize your total attack surface reduction rule events over time with trend\r\nlet StartDate = now(-90d);\r\nlet EndDate = now();\r\nDeviceEvents\r\n| where ActionType startswith \"Asr\"\r\n| make-series ['Total ASR Events']=count() on TimeGenerated in range(StartDate, EndDate, 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(['Total ASR Events'])\r\n| project TimeGenerated, ['Total ASR Events'], Trend=TrendLine\r\n| render timechart\r\n    with (\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count of ASR Events\",\r\n    title=\"Attack surface reduction events over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f26501d0-c66a-4b77-bd73-8e9529badf88')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect Log Analytics keys read",
                "description": "Detect when the workspace keys to an Azure Log Analytics workspace are read\n",
                "body": "//Detect when the workspace keys to an Azure Log Analytics workspace are read\r\nAzureActivity\r\n| where OperationNameValue == \"MICROSOFT.OPERATIONALINSIGHTS/WORKSPACES/SHAREDKEYS/ACTION\"\r\n| extend WorkspaceName = tostring(parse_json(Properties).resource)\r\n| where ActivityStatusValue == \"Success\"\r\n| project\r\n    TimeGenerated,\r\n    Actor=Caller,\r\n    ['Log Analytics Workspace Name']=WorkspaceName,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f2f1bd26-beef-4e43-bccc-732f70bea8e3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize guest invite redemption with trend",
                "description": "Visualize how many guests are redeeming invites over the time period with trend",
                "body": "//Visualize how many guests are redeeming invites over the time period with trend\r\nlet StartDate = now(-180d);\r\nlet EndDate = now();\r\nAuditLogs\r\n| where OperationName == \"Redeem external user invite\"\r\n| make-series TotalInvites=count() on TimeGenerated in range(StartDate, EndDate, 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(TotalInvites)\r\n| project TimeGenerated, TotalInvites, TrendLine\r\n| render timechart with (title=\"Guest Invites redeemed over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f30e961e-744f-4639-9e7a-9023b9deff7e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect possible DNS transfer",
                "description": "When Defender for Cloud detects possible data transfer via DNS tunnel, use DNS logs to find any other devices that have queried the potentially malicious domain\n",
                "body": "//When Defender for Cloud detects possible data transfer via DNS tunnel, use DNS logs to find any other devices that have queried the potentially malicious domain\r\nlet maliciousdomain=\r\n    SecurityAlert\r\n    | where AlertName contains \"via DNS tunnel\"\r\n    | mv-expand todynamic(Entities)\r\n    | project Entities\r\n    | extend MaliciousDomain = tostring(Entities.DomainName)\r\n    | where isnotempty(MaliciousDomain)\r\n    | distinct MaliciousDomain;\r\nDnsEvents\r\n| where QueryType == \"A\"\r\n| project Name, ClientIP\r\n| where Name in~ (maliciousdomain)\r\n| summarize ['List of Device IPs']=make_set(ClientIP) by Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f3225d19-ea15-40d3-a336-718156cce115')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize special privilege at logon",
                "description": "Create a summary of your computers and the accounts that have logged on with special privileges over the last 30 days",
                "body": "//Create a summary of your computers and the accounts that have logged on with special privileges over the last 30 days\r\nSecurityEvent\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, EventID, Account, AccountType, PrivilegeList, Computer\r\n| where EventID == \"4672\"\r\n| where Account != \"NT AUTHORITY\\\\SYSTEM\" and Account !has \"Window Manager\"\r\n| where AccountType == \"User\"\r\n//The privilege list is stored in a string of text that we need to split\r\n| extend Privs=extract_all(@\"Se(.*?)Privilege\", PrivilegeList)\r\n//Once we retrieve the privileges from the string of text we can recreate the proper naming\r\n| mv-expand Privs\r\n| extend Privilege=strcat('Se', Privs, 'Privilege')\r\n| project TimeGenerated, Account, Computer, Privilege\r\n| summarize ['List of Privileges']=make_set(Privilege) by Computer, Account\r\n| sort by Computer asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fb771eb6-2dda-470f-901a-9536a526e413')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect new exchange role created",
                "description": "Detect when a new Exchange admin role is created and parse the permissions",
                "body": "//Detect when a new Exchange admin role is created and parse the permissions\nOfficeActivity\n| where Operation == \"New-RoleGroup\"\n| where RecordType == \"ExchangeAdmin\"\n| parse Parameters with * 'Name\",\"Value\":\"' ['Role Name'] '\"' *\n| parse Parameters with * 'Roles\",\"Value\":\"' ['Permissions Added'] '\"' *\n| project TimeGenerated, Actor=UserId, ['Role Name'], ['Permissions Added']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fbc52c2d-eccb-44c2-9fc5-c006c327ef93')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect potential MFA spam",
                "description": "Detect when a user denies MFA several times within a single sign in attempt and then completes MFA.",
                "body": "//Detect when a user denies MFA several times within a single sign in attempt and then completes MFA.\r\n//This could be a sign of someone trying to spam your users with MFA prompts until they accept.\r\n//Select your threshold of how many times a user denies MFA before accepting\r\nlet threshold=2;\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n//Include only authentications that require MFA\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n//Extend authentication result description\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n//Find results that include both denined and completed MFA\r\n| where AuthResult in (\"MFA completed in Azure AD\", \"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n//Create a list of completed and denied MFA challenges per correlation id\r\n| summarize ['Result Types']=make_list(AuthResult) by CorrelationId, UserPrincipalName\r\n//Ensure the list includes both completed and denied MFA challenges\r\n| where ['Result Types'] has (\"MFA completed in Azure AD\") and ['Result Types'] has_any (\"MFA denied; user declined the authentication\", \"MFA denied; user did not respond to mobile app notification\")\r\n| mv-expand ['Result Types'] to typeof(string)\r\n//Expand and count all the denied challenges and then return CorrelationId's where the MFA denied count is greater or equal to your threshold\r\n| where ['Result Types'] has_any (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Denied MFA Count']=count()by ['Result Types'], CorrelationId, UserPrincipalName\r\n| where ['Denied MFA Count'] >= threshold\r\n\r\n//Alternate query, instead of grouping signins by CorrelationId we group them by UserPrincipalName and 10 minute blocks of time.\r\n//In case the bad actor is starting a whole new sign in each time and generating a new CorrelationId for each attempt.\r\n//Select your threshold of how many times a user denies MFA before accepting\r\nlet threshold=2;\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n//Include only authentications that require MFA\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n//Extend authentication result description\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n//Find results that include both denined and completed MFA\r\n| where AuthResult in (\"MFA completed in Azure AD\", \"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n//Create a list of completed and denied MFA challenges per user principal name over 10 minute periods\r\n| summarize ['Result Types']=make_list(AuthResult) by UserPrincipalName, bin(TimeGenerated, 10m)\r\n//Ensure the list includes both completed and denied MFA challenges\r\n| where ['Result Types'] has (\"MFA completed in Azure AD\") and ['Result Types'] has_any (\"MFA denied; user declined the authentication\", \"MFA denied; user did not respond to mobile app notification\")\r\n| mv-expand ['Result Types'] to typeof(string)\r\n//Expand and count all the denied challenges and then return UserPrincipalNames where the MFA denied count is greater or equal to your threshold\r\n| where ['Result Types'] has_any (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Denied MFA Count']=count()by ['Result Types'], UserPrincipalName\r\n| where ['Denied MFA Count'] >= threshold\r\n\r\n//Simple query to count users being spammed with denies or not responding in one hour time windows\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n| where AuthResult in (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Result Types']=make_list(AuthResult), ['Result Count']=count() by UserPrincipalName, bin(TimeGenerated, 60m)\r\n//Find hits with greater than 3 failures in an hour\r\n| where ['Result Count'] > 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/feb4c5b9-273d-4487-b6ac-1853c88e82b8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize conditional access policy failures",
                "description": "Visualizes conditional access policy failures over time by policy name",
                "body": "//Visualizes conditional access policy failures over time by policy name\nlet start = now(-90d);\nlet end = now();\nlet timeframe= 12h;\nSigninLogs\n| project TimeGenerated, ResultType, ConditionalAccessPolicies\n| where ResultType == 53003\n| mv-expand ConditionalAccessPolicies\n| where ConditionalAccessPolicies.result == \"failure\"\n| extend ['CA Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\n| make-series ['Failure Count'] = count() default=0 on TimeGenerated in range(start, end, timeframe) by ['CA Policy Name']\n| render timechart with (title=\"Conditional access policy failure over time\")\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fef4b581-c6b5-4788-a28a-556b41342d5d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect changes to conditional access outside of working hours",
                "description": "Detect changes to Azure AD Conditional Access policies on weekends or outside of business hours",
                "body": "//Detect changes to Azure AD Conditional Access policies on weekends or outside of business hours\nlet Saturday = time(6.00:00:00);\nlet Sunday = time(0.00:00:00);\nAuditLogs\n| where OperationName has \"conditional access\"\n// extend LocalTime to your time zone\n| extend LocalTime=TimeGenerated + 8h\n// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\n| where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\n| extend ['Conditional Access Policy Name'] = tostring(TargetResources[0].displayName)\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n| project LocalTime, OperationName, ['Conditional Access Policy Name'], Actor\n| sort by LocalTime desc \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fefbeacc-bff8-4b90-b70f-5dbd849f6231')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Teams guest additions",
                "description": "Find any of your Teams that have had guests added to them in the last week and arrange by the Teams with the most guests added.",
                "body": "//Find any of your Teams that have had guests added to them in the last week and arrange by the Teams with the most guests added.\r\nOfficeActivity\r\n| where TimeGenerated > ago(7d)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| summarize\r\n    ['Number of Guests Added']=dcount(UserAdded),\r\n    ['List of Guests Added']=make_set(UserAdded)\r\n    by TeamName\r\n| sort by ['Number of Guests Added'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ffc88910-8930-4b7a-9914-c90fe461cd3d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time access to Azure AD management interfaces",
                "description": "Detects users who have accessed Azure AD Management interfaces, such as Azure AD PowerShell or Graph Explorer, who have not accessed in the previous timeframe. Add additional applications to include them in the same query, i.e Defender for Cloud Apps portal.",
                "body": "//Detects users who have accessed Azure AD Management interfaces who have not accessed in the previous timeframe\r\n//Select a time frame to look back on, i.e find users logging on for the first time today not seen in the prior 60 days\r\nlet timeframe = startofday(ago(60d));\r\nlet applications = dynamic([\"Azure Active Directory PowerShell\", \"Microsoft Azure PowerShell\", \"Graph Explorer\", \"ACOM Azure Website\"]);\r\nSigninLogs\r\n| where TimeGenerated > timeframe and TimeGenerated < startofday(now())\r\n| where AppDisplayName in (applications)\r\n| project UserPrincipalName, AppDisplayName\r\n| join kind=rightanti\r\n    (\r\n    SigninLogs\r\n    | where TimeGenerated > startofday(now())\r\n    | where AppDisplayName in (applications)\r\n    )\r\n    on UserPrincipalName, AppDisplayName\r\n| where ResultType == 0\r\n| project TimeGenerated, UserPrincipalName, ResultType, AppDisplayName, IPAddress, Location, UserAgent",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ffd96347-002e-47cd-b94f-a0c1247c89e8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Visualize WAF traffic over time",
                "description": "Visualize WAF rule actions such as allowed, blocked, detected and matched over time\n",
                "body": "//Visualize WAF rule actions such as allowed, blocked, detected and matched over time\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(30d)\r\n| where ResourceType == \"APPLICATIONGATEWAYS\"\r\n| summarize count()by action_s, bin(TimeGenerated, 1h)\r\n| where isnotempty(action_s)\r\n| render timechart with (ytitle=\"WAF Hit Count\", title=\"Web application firewall traffic over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fff39b3c-e152-42ef-b2d9-77dab9064def')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize volume of data copied to USB",
                "description": "Visualize how much data is being copied to USB drives per day in your environment over the time range.",
                "body": "//Visualize how much data is being copied to USB drives per day in your environment over the time range.\r\nDeviceEvents\r\n| where TimeGenerated > ago (21d)\r\n| project TimeGenerated, ActionType, AdditionalFields, DeviceId, FileName\r\n| where ActionType == \"UsbDriveMounted\"\r\n| extend DriveLetter = tostring(todynamic(AdditionalFields).DriveLetter)\r\n| join kind=inner (DeviceFileEvents\r\n    | where TimeGenerated > ago (21d)\r\n    | project TimeGenerated, ActionType, FolderPath, DeviceId, FileName, FileSize\r\n    | extend FileCopyTime = TimeGenerated\r\n    | where ActionType == \"FileCreated\"\r\n    | parse FolderPath with DriveLetter '\\\\' *\r\n    | extend DriveLetter = tostring(DriveLetter)\r\n    )\r\n    on DeviceId, DriveLetter\r\n| distinct FileCopyTime, FileName1, FileSize\r\n| summarize DataCopiedinGB=sum(FileSize / 1024 / 1024 / 1024) by startofday(FileCopyTime)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    xtitle=\"Data Copied in GB\",\r\n    ytitle=\"Day\",\r\n    title=\"Data Copied to USB per day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        }
    ]
}